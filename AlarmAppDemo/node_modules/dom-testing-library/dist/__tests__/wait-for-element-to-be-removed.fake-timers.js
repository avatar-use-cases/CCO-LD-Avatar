"use strict";

require("jest-dom/extend-expect");

var _ = require("../");

var _testUtils = require("./helpers/test-utils");

jest.useFakeTimers();
test('requires a function as the first parameter', () => {
  return expect((0, _.waitForElementToBeRemoved)()).rejects.toThrowErrorMatchingInlineSnapshot(`"waitForElementToBeRemoved requires a function as the first parameter"`);
});
test('requires an element to exist first', () => {
  return expect((0, _.waitForElementToBeRemoved)(() => null)).rejects.toThrowErrorMatchingInlineSnapshot(`"The callback function which was passed did not return an element or non-empty array of elements. waitForElementToBeRemoved requires that the element(s) exist before waiting for removal."`);
});
test('requires an unempty array of elements to exist first', () => {
  return expect((0, _.waitForElementToBeRemoved)(() => [])).rejects.toThrowErrorMatchingInlineSnapshot(`"The callback function which was passed did not return an element or non-empty array of elements. waitForElementToBeRemoved requires that the element(s) exist before waiting for removal."`);
});
test('times out after 4500ms by default', () => {
  const {
    container
  } = (0, _testUtils.render)(`<div></div>`);
  const promise = expect((0, _.waitForElementToBeRemoved)(() => container)).rejects.toThrowErrorMatchingInlineSnapshot(`"Timed out in waitForElementToBeRemoved."`);
  jest.advanceTimersByTime(4501);
  return promise;
});