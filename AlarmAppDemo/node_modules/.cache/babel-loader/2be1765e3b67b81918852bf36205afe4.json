{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\src\\\\containers\\\\Setup\\\\setup.component.js\";\nimport React from 'react';\nimport isLoading from \"../../hocs/isLoading\";\nimport { withTranslation } from 'react-i18next';\nimport { SetupWrapper, SetupCard } from \"./setup.style\";\nimport { withToastManager } from 'react-toast-notifications';\nimport StepSlider from \"..\\\\..\\\\components\\\\Utils\\\\StepSlider\\\\StepSlider\";\n/**\r\n * Welcome Page UI component, containing the styled components for the Welcome Page\r\n * Image component will get theimage context and resolve the value to render.\r\n * @param props\r\n */\n\nvar getTransportationPreference = function getTransportationPreference(transPref) {\n  if (transPref) {\n    console.log(\"transPref\");\n    console.log(transPref); // return transPref.map(tP => (\n    //   <p>\n    //     Today's Transportation Method: {tP.mot}\n    //   </p>\n    // ));\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, transPref);\n  } else {\n    return \"No Results\";\n  }\n};\n\nvar getWorkGeo = function getWorkGeo(workGeo) {\n  if (workGeo) {\n    console.log(\"workGEO\");\n    console.log(workGeo);\n    return workGeo.map(function (wG) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Work Location: \", wG.lat, \", \", wG.lon);\n    });\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getHomeGeo = function getHomeGeo(homeGeo) {\n  if (homeGeo) {\n    console.log(\"homeGeo\");\n    console.log(homeGeo);\n    return homeGeo.map(function (hG) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Home Location: \", hG.lat, \", \", hG.lon);\n    });\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getDriveTime = function getDriveTime(driveTime) {\n  if (driveTime) {\n    // alert(driveTime);\n    // console.log(driveTime);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, driveTime.toFixed(2), \" minutes\");\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getWeather = function getWeather(homeWeather, workWeather) {\n  console.log(\"getWeather: \" + homeWeather + \" | \" + workWeather);\n\n  if (homeWeather || workWeather) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Home Weather: \", homeWeather, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), \"Work Weather: \", workWeather);\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getWeatherPenalty = function getWeatherPenalty(workWeatherPenalty, homeWeatherPenalty) {\n  if (homeWeatherPenalty || workWeatherPenalty) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Home weather penalty: \", homeWeatherPenalty, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \"Work weather penalty: \", workWeatherPenalty);\n  } else {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Home weather penalty: 0\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \"Work weather penalty: 0\");\n  }\n};\n\nvar calcTime = function calcTime() {\n  var prepTime = parseInt(document.getElementById(\"slider\").innerText);\n  console.log(\"prep: \" + prepTime.toString());\n  var homeWeatherTime = parseInt(document.getElementById(\"hwp\").innerText);\n  console.log(\"hwt: \" + homeWeatherTime.toString());\n  var workWeatherTime = parseInt(document.getElementById(\"wwp\").innerText);\n  console.log(\"wwt: \" + workWeatherTime.toString());\n  var driveTime = parseInt(document.getElementById(\"dt\").innerText);\n  console.log(\"dt: \" + driveTime.toString());\n  var totalTime = (prepTime + driveTime + homeWeatherTime + workWeatherTime).toFixed(2);\n  console.log(\"tt: \" + totalTime.toString());\n  alert(totalTime);\n  var workTime = document.getElementById(\"workTime\").value;\n  var MILLIS = 60000;\n  var alarmTime = new Date();\n  var hour = parseInt(workTime.substring(0, 2));\n  var minutes = parseInt(workTime.substring(2, 4));\n  alarmTime.setHours(hour);\n  alarmTime.setMinutes(minutes);\n  alarmTime = new Date(alarmTime - totalTime * MILLIS);\n  alert(alarmTime);\n  document.getElementById(\"wakeUpTimeDisplay\").innerHTML = \"<h3>Alarm set for: \" + alarmTime.toLocaleTimeString() + \"</h3>\";\n};\n\nvar SetupPageContent = function SetupPageContent(props) {\n  var name = props.name,\n      t = props.t;\n  return React.createElement(SetupWrapper, {\n    \"data-testid\": \"welcome-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(SetupCard, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, t('welcome.welcome'), \", \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, name)), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '98%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"How long do you need to get ready for work?\"), React.createElement(\"div\", {\n    style: {\n      paddingTop: \"3em\",\n      width: \"30%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"workTime\",\n    placeholder: \"When do you start work? <24hr format ex: 1430 or 0500>\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(StepSlider, {\n    id: \"prepTime\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: calcTime,\n    styles: {\n      width: '100'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Show total time before work\")), React.createElement(\"div\", {\n    id: \"hwp\",\n    style: {\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, props.homeWeatherPenalty), React.createElement(\"div\", {\n    id: \"wwp\",\n    style: {\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, props.workWeatherPenalty), React.createElement(\"div\", {\n    id: \"dt\",\n    style: {\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, props.driveTime), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"wakeUpTimeDisplay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '98%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Query Results:\", getWorkGeo(props.workGeo), getHomeGeo(props.homeGeo)), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '98%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), \"Travel Time:\", getDriveTime(props.driveTime)), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '98%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), \"Weather info:\", getWeather(props.homeWeather, props.workWeather), getWeatherPenalty(props.homeWeatherPenalty, props.workWeatherPenalty)), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '98%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), \"Transportation info:\", getTransportationPreference(props.transPref))));\n};\n\nexport { SetupPageContent };\nexport default withTranslation()(isLoading(withToastManager(SetupPageContent)));","map":{"version":3,"sources":["C:\\Users\\jason\\Documents\\APG\\Solid\\generatorTest\\solidwakeup\\wakeup-react\\src\\containers\\Setup\\setup.component.js"],"names":["React","isLoading","withTranslation","SetupWrapper","SetupCard","withToastManager","StepSlider","getTransportationPreference","transPref","console","log","getWorkGeo","workGeo","map","wG","lat","lon","getHomeGeo","homeGeo","hG","getDriveTime","driveTime","toFixed","getWeather","homeWeather","workWeather","getWeatherPenalty","workWeatherPenalty","homeWeatherPenalty","calcTime","prepTime","parseInt","document","getElementById","innerText","toString","homeWeatherTime","workWeatherTime","totalTime","alert","workTime","value","MILLIS","alarmTime","Date","hour","substring","minutes","setHours","setMinutes","innerHTML","toLocaleTimeString","SetupPageContent","props","name","t","textAlign","width","marginLeft","marginRight","paddingTop","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport isLoading from '@hocs/isLoading';\r\nimport {withTranslation } from 'react-i18next';\r\nimport {\r\n  SetupWrapper,\r\n  SetupCard\r\n} from './setup.style';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport StepSlider from '..\\\\..\\\\components\\\\Utils\\\\StepSlider\\\\StepSlider';\r\n\r\n/**\r\n * Welcome Page UI component, containing the styled components for the Welcome Page\r\n * Image component will get theimage context and resolve the value to render.\r\n * @param props\r\n */\r\n\r\n  const getTransportationPreference = transPref => {\r\n\r\n    if (transPref) {\r\n      console.log(\"transPref\")\r\n      console.log(transPref)\r\n      // return transPref.map(tP => (\r\n      //   <p>\r\n      //     Today's Transportation Method: {tP.mot}\r\n      //   </p>\r\n      // ));\r\n      return (\r\n        <p>\r\n          {transPref}\r\n        </p>\r\n      )\r\n    }\r\n    else {\r\n      return \"No Results\"\r\n    }\r\n  }\r\n\r\n  const getWorkGeo = workGeo => {\r\n    if (workGeo) {\r\n        console.log(\"workGEO\")\r\n        console.log(workGeo)\r\n        return workGeo.map(wG => (\r\n          <p>\r\n            Work Location: {wG.lat}, {wG.lon}\r\n          </p>\r\n        ));\r\n    }\r\n    else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n\r\n  const getHomeGeo = homeGeo => {\r\n    if (homeGeo) {\r\n        console.log(\"homeGeo\")\r\n        console.log(homeGeo)\r\n        return homeGeo.map(hG => (\r\n          <p>\r\n            Home Location: {hG.lat}, {hG.lon}\r\n          </p>\r\n        ));\r\n    } \r\n    else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n\r\n  const getDriveTime = driveTime => {\r\n    if (driveTime) {\r\n      // alert(driveTime);\r\n      // console.log(driveTime);\r\n      return (\r\n        <p>\r\n          {driveTime.toFixed(2)} minutes\r\n        </p>\r\n      );\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n  \r\n  const getWeather = (homeWeather,workWeather) => {\r\n    console.log(\"getWeather: \" + homeWeather + \" | \" + workWeather)\r\n    if ((homeWeather) || (workWeather)) {\r\n      return (\r\n        <p>\r\n          Home Weather: {homeWeather}\r\n          <br/>\r\n          Work Weather: {workWeather}\r\n        </p>\r\n  \r\n      );\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n  \r\n  const getWeatherPenalty = (workWeatherPenalty,homeWeatherPenalty) => {\r\n    if ((homeWeatherPenalty) || (workWeatherPenalty)) {\r\n      return (\r\n        <p>\r\n          Home weather penalty: {homeWeatherPenalty}\r\n          <br/>\r\n          Work weather penalty: {workWeatherPenalty}\r\n        </p>\r\n  \r\n      );\r\n    } else {\r\n      return (\r\n        <p>\r\n          Home weather penalty: 0\r\n          <br/>\r\n          Work weather penalty: 0\r\n        </p>\r\n      )\r\n    }\r\n  };\r\n  \r\n  const calcTime = () => {\r\n    let prepTime = parseInt(document.getElementById(\"slider\").innerText);\r\n    console.log(\"prep: \" + prepTime.toString())\r\n    let homeWeatherTime = parseInt(document.getElementById(\"hwp\").innerText);\r\n    console.log(\"hwt: \" + homeWeatherTime.toString())\r\n    let workWeatherTime = parseInt(document.getElementById(\"wwp\").innerText);\r\n    console.log(\"wwt: \" + workWeatherTime.toString())\r\n    let driveTime = parseInt(document.getElementById(\"dt\").innerText);\r\n    console.log(\"dt: \" + driveTime.toString())\r\n    let totalTime = (prepTime + driveTime + homeWeatherTime + workWeatherTime).toFixed(2)\r\n    console.log(\"tt: \" + totalTime.toString())\r\n  \r\n    alert(totalTime)\r\n\r\n    let workTime = document.getElementById(\"workTime\").value;\r\n    const MILLIS = 60000;\r\n    let alarmTime = new Date;\r\n    let hour = parseInt(workTime.substring(0,2))\r\n    let minutes = parseInt(workTime.substring(2,4))\r\n    alarmTime.setHours(hour)\r\n    alarmTime.setMinutes(minutes)\r\n    alarmTime = new Date(alarmTime-(totalTime*MILLIS))\r\n    alert(alarmTime)\r\n    document.getElementById(\"wakeUpTimeDisplay\").innerHTML = \"<h3>Alarm set for: \" + alarmTime.toLocaleTimeString() + \"</h3>\"\r\n  }\r\n\r\n\r\n  const SetupPageContent = props => {\r\n    const { name, t } = props;\r\n    \r\n    return (\r\n      <SetupWrapper data-testid=\"welcome-wrapper\">\r\n        <SetupCard className=\"card\">\r\n          <h3>\r\n            {t('welcome.welcome')}, <span>{name}</span>\r\n          </h3>\r\n          \r\n          <div style={{textAlign:'center',width:'98%',marginLeft:'auto',marginRight:'auto'}}>How long do you need to get ready for work?</div>\r\n        \r\n          <div style={{paddingTop:\"3em\",width:\"30%\"}}>\r\n            <input id=\"workTime\" placeholder=\"When do you start work? <24hr format ex: 1430 or 0500>\"/>\r\n          </div>\r\n\r\n          <StepSlider id=\"prepTime\" />\r\n            \r\n          <div>\r\n            <br/>\r\n            <button onClick={calcTime} styles={{width:'100'}}>Show total time before work</button>\r\n          </div>\r\n\r\n          <div id=\"hwp\" style={{display:\"none\"}}>\r\n            {props.homeWeatherPenalty}\r\n          </div>\r\n          <div id=\"wwp\"  style={{display:\"none\"}}>\r\n            {props.workWeatherPenalty}\r\n          </div>\r\n          <div id=\"dt\"  style={{display:\"none\"}}>\r\n            {props.driveTime}\r\n          </div>\r\n\r\n        <br/><br/>\r\n          \r\n        <div id=\"wakeUpTimeDisplay\">\r\n        </div>\r\n\r\n        <div style={{textAlign:'center',width:'98%',marginLeft:'auto',marginRight:'auto'}}>\r\n          Query Results:\r\n            {\r\n              getWorkGeo(props.workGeo)\r\n            }\r\n            {\r\n              getHomeGeo(props.homeGeo)\r\n            }\r\n        </div>\r\n  \r\n        <div style={{textAlign:'center',width:'98%',marginLeft:'auto',marginRight:'auto'}}>\r\n          <br/><br/>\r\n          Travel Time:\r\n          {getDriveTime(props.driveTime)}\r\n        </div>\r\n  \r\n        <div style={{textAlign:'center',width:'98%',marginLeft:'auto',marginRight:'auto'}}>\r\n          <br/><br/>\r\n          Weather info: \r\n          {getWeather(props.homeWeather,props.workWeather)}\r\n          {getWeatherPenalty(props.homeWeatherPenalty,props.workWeatherPenalty)}\r\n        </div>\r\n  \r\n        <div style={{textAlign:'center',width:'98%',marginLeft:'auto',marginRight:'auto'}}>\r\n          <br/><br/>\r\n          Transportation info: \r\n          {getTransportationPreference(props.transPref)}\r\n        </div>\r\n\r\n        </SetupCard>\r\n      </SetupWrapper>\r\n    );\r\n  };\r\n  \r\n  export { SetupPageContent };\r\n  export default withTranslation()(\r\n    isLoading(withToastManager(SetupPageContent))\r\n  );\r\n"]},"metadata":{},"sourceType":"module"}