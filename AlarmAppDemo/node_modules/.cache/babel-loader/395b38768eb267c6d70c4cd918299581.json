{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\DemoApp\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\DemoApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\DemoApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\DemoApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\DemoApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\DemoApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\DemoApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\DemoApp\\\\src\\\\containers\\\\Setup\\\\setup.container.js\";\nimport React, { Component } from 'react';\nimport SetupPageContent from \"./setup.component\";\nimport { withWebId } from '@inrupt/solid-react-components';\nimport data from '@solid/query-ldflex';\nimport { withToastManager } from 'react-toast-notifications';\nimport $rdf from \"rdflib\";\nvar defaultProfilePhoto = '/img/icon/empty-profile.svg';\nvar store = $rdf.graph(); // RG - 2019-02-28\n// Loads the data from a URL into the local store\n\nvar loadFromUrl = function loadFromUrl(url, store) {\n  return new Promise(function (resolve, reject) {\n    var fetcher = new $rdf.Fetcher(store);\n\n    try {\n      fetcher.load(url).then(function (response) {\n        resolve(response.responseText); // console.debug(response.responseText);\n        // $rdf.parse(response.responseText, store, $rdf.sym(url).uri,\"application/rdf\");\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}; // RG - 2019-02-28\n// Prepares a query by converting SPARQL into a Solid query\n\n\nvar prepare = function prepare(qryStr, store) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var query = $rdf.SPARQLToQuery(qryStr, false, store);\n      resolve(query);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}; // RG - 2019-02-28\n// Executes a query on the local store\n\n\nvar execute = function execute(qry, store) {\n  return new Promise(function (resolve, reject) {\n    // console.debug(\"here\");\n    var wanted = qry.vars;\n    var resultAry = [];\n    store.query(qry, function (results) {\n      // console.debug(\"here1\");\n      if (typeof results === \"undefined\") {\n        reject(\"No results.\");\n      } else {\n        var row = rowHandler(wanted, results); // console.debug(row);\n\n        if (row) resultAry.push(row);\n      }\n    }, {}, function () {\n      resolve(resultAry);\n    });\n  });\n}; // RG - 2019-02-28\n// Puts query results into an array according to the projection\n\n\nvar rowHandler = function rowHandler(wanted, results) {\n  var row = {};\n\n  for (var r in results) {\n    var found = false;\n    var got = r.replace(/^\\?/, \"\");\n\n    if (wanted.length) {\n      for (var w in wanted) {\n        if (got === wanted[w].label) {\n          found = true;\n          continue;\n        }\n      }\n\n      if (!found) continue;\n    }\n\n    row[got] = results[r].value;\n  }\n\n  return row;\n};\n\nvar listContains = function listContains(s, a) {\n  for (var i = 0; i < a.length; i++) {\n    console.log(\"checking:\" + s + \"|\" + a[i]);\n\n    if (s.toLowercase().includes(a[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar SetupComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SetupComponent, _Component);\n\n  function SetupComponent(props) {\n    var _this;\n\n    _classCallCheck(this, SetupComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SetupComponent).call(this, props));\n    _this.getProfileData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var hasImage, user, nameLd, name, imageLd, image, badWeather, userUrl, CUPurl, TESTurl, homeGeoQS, workGeoQS, testQS;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                isLoading: true\n              });\n\n              user = data[_this.props.webId];\n              _context.next = 4;\n              return user.name;\n\n            case 4:\n              nameLd = _context.sent;\n              name = nameLd ? nameLd.value : '';\n              _context.next = 8;\n              return user.image;\n\n            case 8:\n              imageLd = _context.sent;\n\n              if (!imageLd) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.t0 = imageLd;\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.next = 15;\n              return user.vcard_hasPhoto;\n\n            case 15:\n              _context.t0 = _context.sent;\n\n            case 16:\n              imageLd = _context.t0;\n\n              if (imageLd && imageLd.value) {\n                image = imageLd.value;\n                hasImage = true;\n              } else {\n                hasImage = false;\n                image = defaultProfilePhoto;\n              }\n\n              badWeather = [\"rain\", \"showers\", \"snow\", \"flurries\", \"thunderstorms\", \"tornado\", \"hurricane\", \"rainy\", \"snowy\"];\n              userUrl = user.toString();\n              CUPurl = userUrl.substring(0, userUrl.length - 15) + \"/private/JohnDoe.rdf\";\n              TESTurl = userUrl.substring(0, userUrl.length - 15) + \"profile/card\";\n              homeGeoQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?lat ?lon where {?person a cco:Person . ?person ro:agent_in ?reside . ?reside a cco:ActOfResiding . ?reside ro:has_participant ?part . ?part a cco:ResidentialFacility . ?part ro:located_in ?geoLoc . ?geoLoc a cco:GeospatialLocation . ?geoLoc cco:designated_by ?geoCode . ?geoCode cco:inheres_in ?codeId . ?codeId cco:has_latitude_value ?lat . ?codeId cco:has_longitude_value ?lon . }\";\n              workGeoQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?lat ?lon where {?person a cco:Person . ?person ro:agent_in ?employment . ?employment a cco:ActOfEmployment . ?employment cco:realizes ?role . ?role cco:has_organizational_context ?context . ?context a cco:Organization. ?context ro:agent_in ?act . ?act a cco:ActOfInhabitancy . ?act ro:has_participant ?facility . ?facility ro:located_in ?geoLoc . ?geoLoc a cco:GeospatialLocation . ?geoLoc cco:designated_by ?geoCode . ?geoCode cco:inheres_in ?codeId . ?codeId cco:has_latitude_value ?lat . ?codeId cco:has_longitude_value ?lon . }\"; //    const testQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix  obo: <http://purl.obolibrary.org/obo/> select ?lat ?lon where {?act a cco:ActOfResiding. ?act cco:has_object ?home . ?home a cco:ResidentialFacility . ?home obo:RO_0001025 ?geo . ?geo a cco:GeospatialRegion . ?geo cco:designated_by ?geoID . ?geoID obo:RO_0010001 ?ibe . ?ibe a cco:InformationBearingEntity. ?ibe cco:has_latitude_value ?lat. ?ibe cco:has_longitude_value ?lon .}\"\n\n              testQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix  obo: <http://purl.obolibrary.org/obo/> select ?lat ?lon where {?act a cco:ActOfResiding .?lat ?lon ?act. }\"; //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n              _this.setState({\n                transPref: \"bicycle\"\n              }); // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED \n              //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n              loadFromUrl(TESTurl, store).then(function () {\n                return prepare(testQS, store).then(function (qry) {\n                  return execute(qry, store).then(function (results) {\n                    // console.debug(results);\n                    console.log(\"*************************************\");\n                    console.log(results);\n\n                    _this.setState({\n                      test: results\n                    });\n                  });\n                });\n              });\n              loadFromUrl(CUPurl, store).then(function () {\n                return prepare(workGeoQS, store).then(function (qry) {\n                  return execute(qry, store).then(function (results) {\n                    // console.debug(results);\n                    console.log(\"WORK GEO QUERY:\");\n\n                    _this.setState({\n                      workGeo: results\n                    });\n\n                    _this.state.workGeo.map(function (wG) {\n                      _this.setState({\n                        worklat: wG.lat,\n                        workLon: wG.lon,\n                        workWeatherAPI: \"https://api.weather.gov/points/\" + wG.lat.toString() + \",\" + wG.lon.toString() + \"/forecast\"\n                      });\n                    });\n\n                    console.log(\"WEATHER API: \" + _this.state.workWeatherAPI);\n                  }).then(function () {\n                    fetch(_this.state.workWeatherAPI).then(function (response) {\n                      return response.json();\n                    }).then(function (weatherData) {\n                      if (weatherData['status'] !== 404) {\n                        _this.setState({\n                          workWeather: weatherData['properties']['periods']['0']['shortForecast']\n                        });\n\n                        console.log(\"WORK WEATHER: \" + _this.state.workWeather);\n\n                        if (listContains(_this.state.workWeather, badWeather)) {\n                          console.log('WORK WEATHER: inclement weather');\n\n                          _this.setState({\n                            workWeatherPenalty: 15\n                          }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n                          _this.setState({\n                            transPref: \"fastest\"\n                          }); // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED \n                          //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n                        } else {\n                          _this.setState({\n                            workWeatherPenalty: 0\n                          });\n\n                          console.log('WORK WEATHER: No weather penalty');\n                        }\n                      } else {\n                        _this.setState({\n                          workWeather: 'WORK WEATHER: No weather data found'\n                        });\n\n                        _this.setState({\n                          workWeatherPenalty: 0\n                        });\n                      }\n\n                      console.log(\"WORK WEATHER: end weather fetch\");\n                    });\n                  });\n                });\n              });\n              loadFromUrl(CUPurl, store).then(function () {\n                return prepare(homeGeoQS, store).then(function (qry) {\n                  return execute(qry, store).then(function (results) {\n                    // console.debug(results);\n                    console.log(\"home Geo\");\n\n                    _this.setState({\n                      homeGeo: results\n                    });\n\n                    _this.state.homeGeo.map(function (hG) {\n                      _this.setState({\n                        homeLat: hG.lat,\n                        homeLon: hG.lon,\n                        homeWeatherAPI: \"https://api.weather.gov/points/\" + hG.lat.toString() + \",\" + hG.lon.toString() + \"/forecast\"\n                      });\n                    });\n\n                    fetch(_this.state.homeWeatherAPI).then(function (response) {\n                      return response.json();\n                    }).then(function (weatherData) {\n                      if (weatherData['status'] !== 404) {\n                        _this.setState({\n                          homeWeather: weatherData['properties']['periods']['0']['shortForecast']\n                        });\n\n                        console.log(\"HOME WEATHER: \" + _this.state.homeWeather);\n\n                        if (listContains(_this.state.homeWeather, badWeather)) {\n                          console.log('HOME WEATHER: inclement weather');\n\n                          _this.setState({\n                            homeWeatherPenalty: 15\n                          }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n                          _this.setState({\n                            transPref: \"fastest\"\n                          }); // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED \n                          //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n                        } else {\n                          _this.setState({\n                            homeWeatherPenalty: 0\n                          });\n\n                          console.log('HOME WEATHER: No weather penalty');\n                        }\n                      } else {\n                        _this.setState({\n                          homeWeather: 'HOME WEATHER: No weather data found'\n                        });\n\n                        _this.setState({\n                          homeWeatherPenalty: 0\n                        });\n                      }\n\n                      console.log(\"HOME WEATHER: end weather fetch\");\n                    });\n                  });\n                });\n              }).then(function () {\n                //MAPQUEST API\n                var MAPQUEST_API = 'http://www.mapquestapi.com/directions/v2/route?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&from=';\n                var TO = '&to=';\n                var HOMELOC = _this.state.homeLat + \",\" + _this.state.homeLon;\n                var WORKLOC = _this.state.worklat + \",\" + _this.state.workLon;\n                var ROUTETYPE = \"&routeType=\" + _this.state.transPref;\n                console.log(HOMELOC + \" | \" + WORKLOC);\n                fetch(MAPQUEST_API + HOMELOC + TO + WORKLOC + ROUTETYPE).then(function (response) {\n                  return response.json();\n                }).then(function (resData) {\n                  var time = resData.route[\"time\"] / 60;\n\n                  _this.setState({\n                    driveTime: time\n                  });\n\n                  console.log(\"fetch drivetime...\");\n                  console.log({\n                    driveTime: time\n                  });\n                  console.log('end drivetime');\n                  console.log(resData);\n                });\n              });\n\n              _this.setState({\n                name: name,\n                image: image,\n                isLoading: false,\n                hasImage: hasImage\n              });\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.updatePhoto =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(uri, message) {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                user = data.user;\n\n                if (!_this.state.hasImage) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 5;\n                return user.image.set(uri);\n\n              case 5:\n                _context2.next = 9;\n                break;\n\n              case 7:\n                _context2.next = 9;\n                return user.image.add(uri);\n\n              case 9:\n                _this.props.toastManager.add(['', message], {\n                  appearance: 'success'\n                });\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this.props.toastManager.add(['Error', _context2.t0.message], {\n                  appearance: 'error'\n                });\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      name: '',\n      image: defaultProfilePhoto,\n      isLoading: false,\n      hasImage: false,\n      hits: [],\n      value: 0\n    };\n    return _this;\n  }\n\n  _createClass(SetupComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.webId) {\n        this.getProfileData();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.webId && this.props.webId !== prevProps.webId) {\n        this.getProfileData();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          image = _this$state.image,\n          isLoading = _this$state.isLoading,\n          driveTime = _this$state.driveTime,\n          homeWeather = _this$state.homeWeather,\n          homeWeatherPenalty = _this$state.homeWeatherPenalty,\n          workWeather = _this$state.workWeather,\n          workWeatherPenalty = _this$state.workWeatherPenalty,\n          workGeo = _this$state.workGeo,\n          homeGeo = _this$state.homeGeo,\n          transPref = _this$state.transPref,\n          test = _this$state.test;\n      return React.createElement(SetupPageContent, {\n        name: name,\n        image: image,\n        isLoading: isLoading,\n        webId: this.props.webId,\n        updatePhoto: this.updatePhoto,\n        driveTime: driveTime,\n        homeWeather: homeWeather,\n        homeWeatherPenalty: homeWeatherPenalty,\n        workWeather: workWeather,\n        workWeatherPenalty: workWeatherPenalty,\n        sliderVal: 0,\n        workGeo: workGeo,\n        homeGeo: homeGeo,\n        transPref: transPref,\n        test: test,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SetupComponent;\n}(Component);\n\nexport default withWebId(withToastManager(SetupComponent));","map":{"version":3,"sources":["C:\\Users\\jason\\Documents\\APG\\Solid\\DemoApp\\src\\containers\\Setup\\setup.container.js"],"names":["React","Component","SetupPageContent","withWebId","data","withToastManager","$rdf","defaultProfilePhoto","store","graph","loadFromUrl","url","Promise","resolve","reject","fetcher","Fetcher","load","then","response","responseText","err","prepare","qryStr","query","SPARQLToQuery","execute","qry","wanted","vars","resultAry","results","row","rowHandler","push","r","found","got","replace","length","w","label","value","listContains","s","a","i","console","log","toLowercase","includes","SetupComponent","props","getProfileData","setState","isLoading","user","webId","name","nameLd","image","imageLd","vcard_hasPhoto","hasImage","badWeather","userUrl","toString","CUPurl","substring","TESTurl","homeGeoQS","workGeoQS","testQS","transPref","test","workGeo","state","map","wG","worklat","lat","workLon","lon","workWeatherAPI","fetch","json","weatherData","workWeather","workWeatherPenalty","homeGeo","hG","homeLat","homeLon","homeWeatherAPI","homeWeather","homeWeatherPenalty","MAPQUEST_API","TO","HOMELOC","WORKLOC","ROUTETYPE","resData","time","route","driveTime","updatePhoto","uri","message","set","add","toastManager","appearance","hits","prevProps","prevState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SetupPageContent from './setup.component';\r\nimport { withWebId } from '@inrupt/solid-react-components';\r\nimport data from '@solid/query-ldflex';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport $rdf from \"rdflib\";\r\n\r\nconst defaultProfilePhoto = '/img/icon/empty-profile.svg';\r\nconst store = $rdf.graph();\r\n\r\n\r\n// RG - 2019-02-28\r\n// Loads the data from a URL into the local store\r\nconst loadFromUrl = (url, store) => {\r\n    return new Promise((resolve, reject) => {\r\n      let fetcher = new $rdf.Fetcher(store);\r\n      try {\r\n        fetcher.load(url).then(response => {\r\n          resolve(response.responseText);\r\n          // console.debug(response.responseText);\r\n          // $rdf.parse(response.responseText, store, $rdf.sym(url).uri,\"application/rdf\");\r\n        });\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n  \r\n  // RG - 2019-02-28\r\n  // Prepares a query by converting SPARQL into a Solid query\r\n  const prepare = (qryStr, store) => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let query = $rdf.SPARQLToQuery(qryStr, false, store);\r\n        resolve(query);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n  \r\n  // RG - 2019-02-28\r\n  // Executes a query on the local store\r\n  const execute = (qry, store) => {\r\n    return new Promise((resolve, reject) => {\r\n      // console.debug(\"here\");\r\n      const wanted = qry.vars;\r\n      const resultAry = [];\r\n      store.query(\r\n        qry,\r\n        results => {\r\n          // console.debug(\"here1\");\r\n          if (typeof results === \"undefined\") {\r\n            reject(\"No results.\");\r\n          } else {\r\n            let row = rowHandler(wanted, results);\r\n            // console.debug(row);\r\n            if (row) resultAry.push(row);\r\n          }\r\n        },\r\n        {},\r\n        () => {\r\n          resolve(resultAry);\r\n        }\r\n      );\r\n    });\r\n  };\r\n  \r\n  // RG - 2019-02-28\r\n  // Puts query results into an array according to the projection\r\n  const rowHandler = (wanted, results) => {\r\n    const row = {};\r\n    for (var r in results) {\r\n      let found = false;\r\n      let got = r.replace(/^\\?/, \"\");\r\n      if (wanted.length) {\r\n        for (var w in wanted) {\r\n          if (got === wanted[w].label) {\r\n            found = true;\r\n            continue;\r\n          }\r\n        }\r\n        if (!found) continue;\r\n      }\r\n      row[got] = results[r].value;\r\n    }\r\n    return row;\r\n  };\r\n\r\nconst listContains = (s,a) => {\r\n  for (let i=0;i<a.length;i++){\r\n    console.log(\"checking:\" + s + \"|\" + a[i])\r\n    if(s.toLowercase().includes(a[i])){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nclass SetupComponent extends Component<Props> {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          name: '',\r\n          image: defaultProfilePhoto,\r\n          isLoading: false,\r\n          hasImage: false,\r\n          hits:[],\r\n          value:0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.webId) {\r\n          this.getProfileData();\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.webId && this.props.webId !== prevProps.webId) {\r\n          this.getProfileData();\r\n        }\r\n    }\r\n\r\n    getProfileData = async () => {\r\n      this.setState({ isLoading: true });\r\n      let hasImage;\r\n\r\n      const user = data[this.props.webId];\r\n      const nameLd = await user.name;\r\n  \r\n      const name = nameLd ? nameLd.value : '';\r\n  \r\n      let imageLd = await user.image;\r\n      imageLd = imageLd ? imageLd : await user.vcard_hasPhoto;\r\n  \r\n      let image;\r\n      if (imageLd && imageLd.value) {\r\n        image = imageLd.value;\r\n        hasImage = true;\r\n      } else {\r\n        hasImage = false;\r\n        image = defaultProfilePhoto;\r\n      }\r\n  \r\n      const badWeather = [\"rain\",\"showers\",\"snow\",\"flurries\",\"thunderstorms\",\"tornado\",\"hurricane\",\"rainy\",\"snowy\"]\r\n\r\n      const userUrl = user.toString();    \r\n      const CUPurl = userUrl.substring(0,userUrl.length-15)+\"/private/JohnDoe.rdf\"\r\n      const TESTurl = userUrl.substring(0,userUrl.length-15)+\"profile/card\"\r\n\r\n      const homeGeoQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?lat ?lon where {?person a cco:Person . ?person ro:agent_in ?reside . ?reside a cco:ActOfResiding . ?reside ro:has_participant ?part . ?part a cco:ResidentialFacility . ?part ro:located_in ?geoLoc . ?geoLoc a cco:GeospatialLocation . ?geoLoc cco:designated_by ?geoCode . ?geoCode cco:inheres_in ?codeId . ?codeId cco:has_latitude_value ?lat . ?codeId cco:has_longitude_value ?lon . }\"\r\n      const workGeoQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?lat ?lon where {?person a cco:Person . ?person ro:agent_in ?employment . ?employment a cco:ActOfEmployment . ?employment cco:realizes ?role . ?role cco:has_organizational_context ?context . ?context a cco:Organization. ?context ro:agent_in ?act . ?act a cco:ActOfInhabitancy . ?act ro:has_participant ?facility . ?facility ro:located_in ?geoLoc . ?geoLoc a cco:GeospatialLocation . ?geoLoc cco:designated_by ?geoCode . ?geoCode cco:inheres_in ?codeId . ?codeId cco:has_latitude_value ?lat . ?codeId cco:has_longitude_value ?lon . }\";\r\n  //    const testQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix  obo: <http://purl.obolibrary.org/obo/> select ?lat ?lon where {?act a cco:ActOfResiding. ?act cco:has_object ?home . ?home a cco:ResidentialFacility . ?home obo:RO_0001025 ?geo . ?geo a cco:GeospatialRegion . ?geo cco:designated_by ?geoID . ?geoID obo:RO_0010001 ?ibe . ?ibe a cco:InformationBearingEntity. ?ibe cco:has_latitude_value ?lat. ?ibe cco:has_longitude_value ?lon .}\"\r\n      const testQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix  obo: <http://purl.obolibrary.org/obo/> select ?lat ?lon where {?act a cco:ActOfResiding .?lat ?lon ?act. }\"\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    this.setState({transPref:\"bicycle\"})      // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED \r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    loadFromUrl(TESTurl, store).then(() =>\r\n      prepare(testQS, store).then(qry =>\r\n        execute(qry, store).then(results => {\r\n          // console.debug(results);\r\n          console.log(\"*************************************\")\r\n          console.log(results)\r\n          this.setState({ test: results });\r\n        })))\r\n\r\n\r\n    loadFromUrl(CUPurl, store).then(() =>\r\n        prepare(workGeoQS, store).then(qry =>\r\n          execute(qry, store).then(results => {\r\n            // console.debug(results);\r\n            console.log(\"WORK GEO QUERY:\")\r\n            this.setState({ workGeo: results});\r\n            this.state.workGeo.map(wG => {\r\n              this.setState({worklat:wG.lat,workLon:wG.lon,workWeatherAPI:\"https://api.weather.gov/points/\" + wG.lat.toString() + \",\" + wG.lon.toString() + \"/forecast\"})\r\n            })\r\n            console.log(\"WEATHER API: \" + this.state.workWeatherAPI)}).then( () => {\r\n              fetch(this.state.workWeatherAPI).then(response => response.json()).then(weatherData => {\r\n                if(weatherData['status'] !== 404){\r\n                  this.setState({workWeather:weatherData['properties']['periods']['0']['shortForecast']})\r\n                  console.log(\"WORK WEATHER: \" + this.state.workWeather)\r\n                \r\n                  if (listContains(this.state.workWeather,badWeather)){\r\n                    console.log('WORK WEATHER: inclement weather');\r\n                    this.setState({workWeatherPenalty:15});\r\n                    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                    this.setState({transPref:\"fastest\"})      // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED \r\n                    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                  } \r\n                  else{\r\n                    this.setState({workWeatherPenalty:0});\r\n                    console.log('WORK WEATHER: No weather penalty');\r\n                  }\r\n              }\r\n              else{\r\n                this.setState({workWeather:'WORK WEATHER: No weather data found'})\r\n                this.setState({workWeatherPenalty:0})\r\n              }\r\n              console.log(\"WORK WEATHER: end weather fetch\");\r\n              })\r\n            })\r\n      )  \r\n    );\r\n    \r\n    loadFromUrl(CUPurl, store).then(() =>\r\n      prepare(homeGeoQS, store).then(qry =>\r\n        execute(qry, store).then(results => {\r\n          // console.debug(results);\r\n          console.log(\"home Geo\")\r\n          this.setState({ homeGeo: results });\r\n          this.state.homeGeo.map(hG => {\r\n            this.setState({homeLat:hG.lat,homeLon:hG.lon,homeWeatherAPI:\"https://api.weather.gov/points/\" + hG.lat.toString() + \",\" + hG.lon.toString() + \"/forecast\"})\r\n          })\r\n          fetch(this.state.homeWeatherAPI).then(response => response.json()).then(weatherData => {\r\n            if(weatherData['status'] !== 404){\r\n              this.setState({homeWeather:weatherData['properties']['periods']['0']['shortForecast']})\r\n              console.log(\"HOME WEATHER: \" +this.state.homeWeather)\r\n            \r\n              if (listContains(this.state.homeWeather,badWeather)){\r\n                console.log('HOME WEATHER: inclement weather');\r\n                this.setState({homeWeatherPenalty:15});\r\n                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                this.setState({transPref:\"fastest\"})      // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED // TO BE REMOVED \r\n                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n              } \r\n              else{\r\n                this.setState({homeWeatherPenalty:0});\r\n                console.log('HOME WEATHER: No weather penalty');\r\n              }\r\n            }\r\n            else{\r\n              this.setState({homeWeather:'HOME WEATHER: No weather data found'})\r\n              this.setState({homeWeatherPenalty:0})\r\n            }\r\n            console.log(\"HOME WEATHER: end weather fetch\");\r\n          });\r\n        })  \r\n      )\r\n    ).then(() => {\r\n      //MAPQUEST API\r\n      const MAPQUEST_API = 'http://www.mapquestapi.com/directions/v2/route?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&from=';\r\n      const TO = '&to=';\r\n      const HOMELOC = this.state.homeLat +\",\"+this.state.homeLon\r\n      const WORKLOC = this.state.worklat +\",\"+this.state.workLon\r\n      const ROUTETYPE = \"&routeType=\" + this.state.transPref\r\n      \r\n      console.log(HOMELOC + \" | \" + WORKLOC)\r\n\r\n\r\n      fetch(MAPQUEST_API + HOMELOC + TO + WORKLOC + ROUTETYPE)\r\n      .then(response =>  response.json())\r\n      .then(resData => {\r\n        \r\n        let time = resData.route[\"time\"]/60;\r\n        this.setState({ driveTime: time }); \r\n        console.log(\"fetch drivetime...\");\r\n        console.log({driveTime:time});\r\n        console.log('end drivetime');\r\n        console.log(resData)\r\n      })\r\n    })\r\n    \r\n    this.setState({ name, image, isLoading: false, hasImage});\r\n    };\r\n    \r\n\r\n    updatePhoto = async (uri: String, message) => {\r\n        try {\r\n          const { user } = data;\r\n          this.state.hasImage\r\n            ? await user.image.set(uri)\r\n            : await user.image.add(uri);\r\n    \r\n          this.props.toastManager.add(['', message], {\r\n            appearance: 'success'\r\n          });\r\n        } catch (error) {\r\n          this.props.toastManager.add(['Error', error.message], {\r\n            appearance: 'error'\r\n          });\r\n        }\r\n    };    \r\n\r\n    render() {\r\n        const { name, image, isLoading,driveTime,homeWeather,homeWeatherPenalty,workWeather,workWeatherPenalty,workGeo,homeGeo,transPref,test } = this.state;\r\n\r\n        return (\r\n        <SetupPageContent\r\n            name={name}\r\n            image={image}\r\n            isLoading={isLoading}\r\n            webId={this.props.webId}\r\n            updatePhoto={this.updatePhoto}\r\n            \r\n            driveTime={driveTime}\r\n            \r\n            homeWeather={homeWeather}\r\n            homeWeatherPenalty={homeWeatherPenalty}\r\n            \r\n            workWeather={workWeather}\r\n            workWeatherPenalty={workWeatherPenalty}\r\n            \r\n            sliderVal={0}\r\n            workGeo={workGeo}\r\n            homeGeo = {homeGeo}\r\n            transPref={transPref}\r\n            test={test}\r\n        />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withWebId(withToastManager(SetupComponent));\r\n"]},"metadata":{},"sourceType":"module"}