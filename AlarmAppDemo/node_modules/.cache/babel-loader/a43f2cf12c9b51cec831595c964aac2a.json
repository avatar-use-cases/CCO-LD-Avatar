{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\wakeup-react\\\\src\\\\containers\\\\Profile\\\\profile.component.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport isLoading from \"../../hocs/isLoading\";\nimport { Uploader } from '@inrupt/solid-react-components';\nimport { Input } from \"../../components/Utils\";\nimport { ImageProfile } from \"../../components\";\nimport { useTranslation } from 'react-i18next';\nimport { ProfileWrapper, ProfileContainer, FullGridSize, Button, Header, Form, WebId } from \"./profile.style\";\n\nfunction getProfileValue(updatedFields, item) {\n  var currentKey = item.nodeBlank || item.property;\n\n  if (updatedFields[currentKey]) {\n    if (updatedFields[currentKey].value || updatedFields[currentKey].value === '') return updatedFields[currentKey].value;\n  }\n\n  return item.value || '';\n}\n\nvar ProfileComponent = function ProfileComponent(_ref) {\n  var webId = _ref.webId,\n      formFields = _ref.formFields,\n      changeFormMode = _ref.changeFormMode,\n      onInputChange = _ref.onInputChange,\n      updatePhoto = _ref.updatePhoto,\n      toastManager = _ref.toastManager,\n      _onSubmit = _ref.onSubmit,\n      onCancel = _ref.onCancel,\n      formMode = _ref.formMode,\n      updatedFields = _ref.updatedFields,\n      photo = _ref.photo;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return React.createElement(ProfileWrapper, {\n    \"data-testid\": \"profile-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ProfileContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, formMode && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button edit-button\",\n    onClick: changeFormMode,\n    \"data-testid\": \"edit-profile-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: \"pencil-alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), \" \", t('profile.edit')), React.createElement(Uploader, Object.assign({\n    fileBase: webId && webId.split('/card')[0],\n    limitFiles: 1,\n    limitSize: 2100000,\n    accept: 'png,jpg,jpeg',\n    errorsText: {\n      sizeLimit: t('profile.errors.sizeLimit'),\n      unsupported: t('profile.errors.unsupported'),\n      maximumFiles: t('profile.errors.maximumFiles')\n    },\n    onError: function onError(error) {\n      if (error && error.statusText) {\n        toastManager.add(['', error.statusText], {\n          appearance: 'error'\n        });\n      }\n    },\n    onComplete: function onComplete(uploadedFiles) {\n      updatePhoto(uploadedFiles[0].uri, t('profile.uploadSuccess'));\n    },\n    render: function render(props) {\n      return React.createElement(ImageProfile, Object.assign({}, _objectSpread({}, props, {\n        webId: webId,\n        photo: photo,\n        text: t('profile.upload'),\n        uploadingText: t('profile.uploadingText')\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(Form, {\n    onSubmit: function onSubmit(e) {\n      return _onSubmit(e, t('profile.updateSuccess'), t('profile.nameRequired'));\n    },\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, formFields && formFields.map(function (item) {\n    return React.createElement(Input, {\n      key: item.key,\n      id: item.key,\n      placeholder: t(\"profile.\".concat(item.key)),\n      name: item.nodeBlank || item.property,\n      value: getProfileValue(updatedFields, item),\n      onChange: onInputChange,\n      icon: item.icon,\n      readOnly: formMode,\n      required: item.required,\n      \"data-nodeparenturi\": item.nodeParentUri,\n      \"data-nodeblank\": item.nodeBlank,\n      \"data-label\": item.label,\n      \"data-icon\": item.icon,\n      type: 'text',\n      onInvalid: function onInvalid(e) {\n        return e.target.setCustomValidity(t('profile.nameRequired'));\n      },\n      onInput: function onInput(e) {\n        return e.target.setCustomValidity('');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    });\n  }), React.createElement(FullGridSize, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, !formMode && React.createElement(React.Fragment, null, React.createElement(Button, {\n    type: \"button\",\n    onClick: onCancel,\n    className: \"ids-link-stroke ids-link-stroke--primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, t('profile.cancelBtn')), React.createElement(Button, {\n    type: \"submit\",\n    className: \"ids-link-filled ids-link-filled--primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, t('profile.saveBtn'))))), formMode && React.createElement(WebId, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: \"id-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: webId,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, webId))));\n};\n\nexport default isLoading(ProfileComponent);","map":{"version":3,"sources":["C:\\Users\\jason\\Documents\\APG\\Solid\\generatorTest\\wakeup-react\\src\\containers\\Profile\\profile.component.js"],"names":["React","FontAwesomeIcon","isLoading","Uploader","Input","ImageProfile","useTranslation","ProfileWrapper","ProfileContainer","FullGridSize","Button","Header","Form","WebId","getProfileValue","updatedFields","item","currentKey","nodeBlank","property","value","ProfileComponent","webId","formFields","changeFormMode","onInputChange","updatePhoto","toastManager","onSubmit","onCancel","formMode","photo","t","fileBase","split","limitFiles","limitSize","accept","errorsText","sizeLimit","unsupported","maximumFiles","onError","error","statusText","add","appearance","onComplete","uploadedFiles","uri","render","props","text","uploadingText","e","map","key","icon","required","nodeParentUri","label","target","setCustomValidity"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport isLoading from '@hocs/isLoading';\nimport { Uploader } from '@inrupt/solid-react-components';\nimport { Input } from '@util-components';\nimport { ImageProfile } from '@components';\nimport { useTranslation } from 'react-i18next'\nimport {\n  ProfileWrapper,\n  ProfileContainer,\n  FullGridSize,\n  Button,\n  Header,\n  Form,\n  WebId\n} from './profile.style';\n\ntype Props = {\n  webId: String,\n  photo: String,\n  formFields: Array<Object>,\n  updatedFields: Object,\n  changeFormMode: () => void,\n  onInputChange: () => void,\n  onSubmit: () => void,\n  onCancel: () => void,\n  updatePhoto: (uri: String) => void,\n  toastManager: (message: String, options: Object) => void,\n  formMode: boolean\n}\n\n\nfunction getProfileValue(updatedFields: Object, item: Object) {\n  const currentKey = item.nodeBlank || item.property;\n  if (updatedFields[currentKey]) {\n    if (\n      updatedFields[currentKey].value ||\n      updatedFields[currentKey].value === ''\n    )\n      return updatedFields[currentKey].value;\n  }\n  return item.value || '';\n}\n\nconst ProfileComponent = ({\n  webId,\n  formFields,\n  changeFormMode,\n  onInputChange,\n  updatePhoto,\n  toastManager,\n  onSubmit,\n  onCancel,\n  formMode,\n  updatedFields,\n  photo\n}: Props) => {\n  const { t } = useTranslation();\n  return (\n    <ProfileWrapper data-testid=\"profile-component\">\n      <ProfileContainer>\n        <Header>\n          {formMode && (\n            <button\n              type='button'\n              className='button edit-button'\n              onClick={changeFormMode}\n              data-testid=\"edit-profile-button\"\n            >\n              <FontAwesomeIcon icon='pencil-alt' /> {t('profile.edit')}\n            </button>\n          )}\n          <Uploader\n            {...{\n              fileBase: webId && webId.split('/card')[0],\n              limitFiles: 1,\n              limitSize: 2100000,\n              accept: 'png,jpg,jpeg',\n              errorsText: {\n                sizeLimit: t('profile.errors.sizeLimit'),\n                unsupported: t('profile.errors.unsupported'),\n                maximumFiles: t('profile.errors.maximumFiles')\n              },\n              onError: error => {\n                if (error && error.statusText) {\n                  toastManager.add(['', error.statusText], {\n                    appearance: 'error'\n                  });\n                }\n              },\n              onComplete: uploadedFiles => {\n                updatePhoto(uploadedFiles[0].uri, t('profile.uploadSuccess'))\n              },\n              render: props => <ImageProfile {...{ ...props, webId, photo, text: t('profile.upload'),\n                uploadingText: t('profile.uploadingText') }} />\n            }}\n          />\n        </Header>\n        <Form onSubmit={(e) => onSubmit(e,t('profile.updateSuccess'),t('profile.nameRequired') )} noValidate>\n          {formFields &&\n            formFields.map(item => (\n              <Input\n                key={item.key}\n                id={item.key}\n                placeholder={t(`profile.${item.key}`)}\n                name={item.nodeBlank || item.property}\n                value={getProfileValue(updatedFields, item)}\n                onChange={onInputChange}\n                icon={item.icon}\n                readOnly={formMode}\n                required={item.required}\n                data-nodeparenturi={item.nodeParentUri}\n                data-nodeblank={item.nodeBlank}\n                data-label={item.label}\n                data-icon={item.icon}\n                type={'text'}\n                onInvalid={(e) => e.target.setCustomValidity(t('profile.nameRequired'))}\n                onInput={(e) => e.target.setCustomValidity('')}\n              />\n            ))}\n          <FullGridSize>\n            {!formMode && (\n              <>\n                <Button\n                  type='button'\n                  onClick={onCancel}\n                  className='ids-link-stroke ids-link-stroke--primary'\n                >\n                  {t('profile.cancelBtn')}\n                </Button>\n                <Button\n                  type='submit'\n                  className='ids-link-filled ids-link-filled--primary'\n                >\n                  {t('profile.saveBtn')}\n                </Button>\n              </>\n            )}\n          </FullGridSize>\n        </Form>\n        {formMode && (\n          <WebId>\n            <FontAwesomeIcon icon='id-card' />\n            <a href={webId} target='_blank' rel='noopener noreferrer'>\n              {webId}\n            </a>\n          </WebId>\n        )}\n      </ProfileContainer>\n    </ProfileWrapper>\n  )\n}\n\nexport default isLoading(ProfileComponent)\n"]},"metadata":{},"sourceType":"module"}