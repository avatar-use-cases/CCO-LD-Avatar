{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\src\\\\containers\\\\Setup\\\\setup.component.js\";\nimport React from 'react';\nimport isLoading from \"../../hocs/isLoading\";\nimport { withTranslation } from 'react-i18next';\nimport { SetupWrapper, SetupCard } from \"./setup.style\";\nimport { withToastManager } from 'react-toast-notifications';\nimport StepSlider from \"..\\\\..\\\\components\\\\Utils\\\\StepSlider\\\\StepSlider\";\n/**\r\n * Welcome Page UI component, containing the styled components for the Welcome Page\r\n * Image component will get theimage context and resolve the value to render.\r\n * @param props\r\n */\n\nvar getWorkGeo = function getWorkGeo(workGeo) {\n  if (workGeo) {\n    console.log(\"workGEO\");\n    console.log(workGeo);\n    return workGeo.map(function (wG) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Work Location: \", wG.lat, \", \", wG.lon);\n    });\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getHomeGeo = function getHomeGeo(homeGeo) {\n  if (homeGeo) {\n    console.log(\"homeGeo\");\n    console.log(homeGeo);\n    return homeGeo.map(function (hG) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Home Location: \", hG.lat, \", \", hG.lon);\n    });\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getDriveTime = function getDriveTime(driveTime) {\n  if (driveTime) {\n    // alert(driveTime);\n    // console.log(driveTime);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, driveTime.toFixed(2), \" minutes\");\n  } else {\n    return \"No results\";\n  }\n};\n\nvar logDriveTime = function logDriveTime(driveTime) {\n  if (driveTime) {\n    console.log(driveTime);\n  }\n};\n\nvar getWeather = function getWeather(homeWeather, workWeather) {\n  console.log(\"getWeather: \" + homeWeather + \" | \" + workWeather);\n\n  if (homeWeather || workWeather) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, workWeather, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), homeWeather);\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getWeatherPenalty = function getWeatherPenalty(workWeatherPenalty, homeWeatherPenalty) {\n  if (homeWeatherPenalty || workWeatherPenalty) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, homeWeatherPenalty, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), workWeatherPenalty);\n  } else {\n    return 0;\n  }\n};\n\nvar getSliderVal = function getSliderVal() {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  });\n};\n\nvar SetupPageContent = function SetupPageContent(props) {\n  var name = props.name,\n      t = props.t;\n\n  var onSliderChange = function onSliderChange() {\n    alert(document.getElementById(\"preptime\").value);\n  };\n\n  function calcTime() {\n    var adjDriveTime = props.driveTime + props.weatherPenalty;\n\n    if (document.getElementById(\"prepTime\").value) {\n      adjDriveTime += parseInt(document.getElementById(\"prepTime\").value);\n    } // alert(adjDriveTime);\n\n\n    console.log(adjDriveTime);\n  }\n\n  return React.createElement(SetupWrapper, {\n    \"data-testid\": \"welcome-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(SetupCard, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, t('welcome.welcome'), \", \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, name)), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '80%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"How long do you need to get ready for work?\"), React.createElement(StepSlider, {\n    id: \"prepTime\",\n    onChange: onSliderChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), getSliderVal(), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: calcTime,\n    styles: {\n      width: '100'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Show total time before work\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), \"Query Results:\", getWorkGeo(props.workGeo), getHomeGeo(props.homeGeo)), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '80%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), \"Travel Time:\", getDriveTime(props.driveTime), React.createElement(\"button\", {\n    onClick: logDriveTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Get Travel Time\")), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '80%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), \"Weather info:\", getWeather(props.homeWeather, props.workWeather), getWeatherPenalty(props.homeWeatherPenalty, props.workWeatherPenalty), \" minutes\")));\n};\n\nexport { SetupPageContent };\nexport default withTranslation()(isLoading(withToastManager(SetupPageContent)));","map":{"version":3,"sources":["C:\\Users\\jason\\Documents\\APG\\Solid\\generatorTest\\solidwakeup\\wakeup-react\\src\\containers\\Setup\\setup.component.js"],"names":["React","isLoading","withTranslation","SetupWrapper","SetupCard","withToastManager","StepSlider","getWorkGeo","workGeo","console","log","map","wG","lat","lon","getHomeGeo","homeGeo","hG","getDriveTime","driveTime","toFixed","logDriveTime","getWeather","homeWeather","workWeather","getWeatherPenalty","workWeatherPenalty","homeWeatherPenalty","getSliderVal","SetupPageContent","props","name","t","onSliderChange","alert","document","getElementById","value","calcTime","adjDriveTime","weatherPenalty","parseInt","textAlign","width","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport isLoading from '@hocs/isLoading';\r\nimport {withTranslation } from 'react-i18next';\r\nimport {\r\n  SetupWrapper,\r\n  SetupCard\r\n} from './setup.style';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport StepSlider from '..\\\\..\\\\components\\\\Utils\\\\StepSlider\\\\StepSlider';\r\n\r\n/**\r\n * Welcome Page UI component, containing the styled components for the Welcome Page\r\n * Image component will get theimage context and resolve the value to render.\r\n * @param props\r\n */\r\n\r\n  const getWorkGeo = workGeo => {\r\n    if (workGeo) {\r\n        console.log(\"workGEO\")\r\n        console.log(workGeo)\r\n      return workGeo.map(wG => (\r\n        <p>\r\n          Work Location: {wG.lat}, {wG.lon}\r\n        </p>\r\n      ));\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n\r\n  const getHomeGeo = homeGeo => {\r\n    if (homeGeo) {\r\n        console.log(\"homeGeo\")\r\n        console.log(homeGeo)\r\n      return homeGeo.map(hG => (\r\n        <p>\r\n          Home Location: {hG.lat}, {hG.lon}\r\n        </p>\r\n      ));\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n\r\n  const getDriveTime = driveTime => {\r\n    if (driveTime) {\r\n      // alert(driveTime);\r\n      // console.log(driveTime);\r\n      return (\r\n        <p>\r\n          {driveTime.toFixed(2)} minutes\r\n        </p>\r\n      );\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n  \r\n  const logDriveTime = driveTime => {\r\n    if (driveTime) {\r\n      console.log(driveTime);\r\n    }\r\n  }\r\n  \r\n  const getWeather = (homeWeather,workWeather) => {\r\n    console.log(\"getWeather: \" + homeWeather + \" | \" + workWeather)\r\n    if ((homeWeather) || (workWeather)) {\r\n      return (\r\n        <p>\r\n          {workWeather}\r\n          <br/>\r\n          {homeWeather}\r\n        </p>\r\n  \r\n      );\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n  \r\n  const getWeatherPenalty = (workWeatherPenalty,homeWeatherPenalty) => {\r\n    if ((homeWeatherPenalty) || (workWeatherPenalty)) {\r\n      return (\r\n        <p>\r\n          {homeWeatherPenalty}\r\n          <br/>\r\n          {workWeatherPenalty}\r\n        </p>\r\n  \r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const getSliderVal = () => {\r\n\r\n    return (\r\n      <p>\r\n        {/* this is a slider value {this.state.sliderVal} */}\r\n      </p>\r\n    );\r\n  }\r\n  \r\n  const SetupPageContent = props => {\r\n    const { name, t } = props;\r\n    \r\n  const onSliderChange = () => {\r\n    alert(document.getElementById(\"preptime\").value)\r\n  }\r\n  \r\n    function calcTime(){\r\n      var adjDriveTime = props.driveTime+props.weatherPenalty;\r\n      if (document.getElementById(\"prepTime\").value){\r\n        adjDriveTime += parseInt(document.getElementById(\"prepTime\").value);\r\n      }\r\n      // alert(adjDriveTime);\r\n      console.log(adjDriveTime);\r\n    }\r\n  \r\n    return (\r\n      <SetupWrapper data-testid=\"welcome-wrapper\">\r\n        <SetupCard className=\"card\">\r\n          <h3>\r\n            {t('welcome.welcome')}, <span>{name}</span>\r\n          </h3>\r\n          \r\n          <div style={{textAlign:'center',width:'80%',marginLeft:'auto',marginRight:'auto'}}>How long do you need to get ready for work?</div>\r\n        \r\n        <StepSlider id=\"prepTime\" onChange={onSliderChange}/>\r\n        \r\n        {getSliderVal()}\r\n  \r\n        <div>\r\n          <br/>\r\n          <button onClick={calcTime} styles={{width:'100'}}>Show total time before work</button>\r\n        </div>\r\n          \r\n        <div>\r\n          <br/><br/>\r\n          Query Results:\r\n            {\r\n              getWorkGeo(props.workGeo)\r\n            }\r\n            {\r\n              getHomeGeo(props.homeGeo)\r\n            }\r\n        </div>\r\n  \r\n        <div style={{textAlign:'center',width:'80%',marginLeft:'auto',marginRight:'auto'}}>\r\n          <br/><br/>\r\n          Travel Time:\r\n          {getDriveTime(props.driveTime)}\r\n          <button onClick={logDriveTime}>Get Travel Time</button>        \r\n        </div>\r\n  \r\n        <div style={{textAlign:'center',width:'80%',marginLeft:'auto',marginRight:'auto'}}>\r\n          <br/><br/>\r\n          Weather info: \r\n          {getWeather(props.homeWeather,props.workWeather)}\r\n          {getWeatherPenalty(props.homeWeatherPenalty,props.workWeatherPenalty)} minutes\r\n        </div>\r\n  \r\n        </SetupCard>\r\n      </SetupWrapper>\r\n    );\r\n  };\r\n  \r\n  export { SetupPageContent };\r\n  export default withTranslation()(\r\n    isLoading(withToastManager(SetupPageContent))\r\n  );\r\n"]},"metadata":{},"sourceType":"module"}