{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\src\\\\containers\\\\Setup\\\\setup.container.js\";\nimport React, { Component } from 'react';\nimport SetupPageContent from \"./setup.component\";\nimport { withWebId } from '@inrupt/solid-react-components';\nimport data from '@solid/query-ldflex';\nimport { withToastManager } from 'react-toast-notifications';\nimport $rdf from \"rdflib\";\nvar defaultProfilePhoto = '/img/icon/empty-profile.svg';\nvar store = $rdf.graph(); // RG - 2019-02-28\n// Loads the data from a URL into the local store\n\nvar loadFromUrl = function loadFromUrl(url, store) {\n  return new Promise(function (resolve, reject) {\n    var fetcher = new $rdf.Fetcher(store);\n\n    try {\n      fetcher.load(url).then(function (response) {\n        resolve(response.responseText);\n        console.debug(response.responseText); // $rdf.parse(response.responseText, store, $rdf.sym(url).uri,\"application/rdf\");\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n}; // RG - 2019-02-28\n// Prepares a query by converting SPARQL into a Solid query\n\n\nvar prepare = function prepare(qryStr, store) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var query = $rdf.SPARQLToQuery(qryStr, false, store);\n      resolve(query);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}; // RG - 2019-02-28\n// Executes a query on the local store\n\n\nvar execute = function execute(qry, store) {\n  return new Promise(function (resolve, reject) {\n    console.debug(\"here\");\n    var wanted = qry.vars;\n    var resultAry = [];\n    store.query(qry, function (results) {\n      console.debug(\"here1\");\n\n      if (typeof results === \"undefined\") {\n        reject(\"No results.\");\n      } else {\n        var row = rowHandler(wanted, results);\n        console.debug(row);\n        if (row) resultAry.push(row);\n      }\n    }, {}, function () {\n      resolve(resultAry);\n    });\n  });\n}; // RG - 2019-02-28\n// Puts query results into an array according to the projection\n\n\nvar rowHandler = function rowHandler(wanted, results) {\n  var row = {};\n\n  for (var r in results) {\n    var found = false;\n    var got = r.replace(/^\\?/, \"\");\n\n    if (wanted.length) {\n      for (var w in wanted) {\n        if (got === wanted[w].label) {\n          found = true;\n          continue;\n        }\n      }\n\n      if (!found) continue;\n    }\n\n    row[got] = results[r].value;\n  }\n\n  return row;\n};\n\nvar SetupComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SetupComponent, _Component);\n\n  function SetupComponent(props) {\n    var _this;\n\n    _classCallCheck(this, SetupComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SetupComponent).call(this, props));\n    _this.getProfileData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var hasImage, user, nameLd, name, imageLd, image, userUrl, CUPurl, qryStrQ, homeGeoQS, workGeoQS;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                isLoading: true\n              });\n\n              /*\r\n               * This is an example of how to use LDFlex. Here, we're loading the webID link into a user variable. This user object\r\n               * will contain all of the data stored in the webID link, such as profile information. Then, we're grabbing the user.name property\r\n               * from the returned user object.\r\n               */\n              user = data[_this.props.webId];\n              _context.next = 4;\n              return user.name;\n\n            case 4:\n              nameLd = _context.sent;\n              name = nameLd ? nameLd.value : '';\n              _context.next = 8;\n              return user.image;\n\n            case 8:\n              imageLd = _context.sent;\n\n              if (!imageLd) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.t0 = imageLd;\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.next = 15;\n              return user.vcard_hasPhoto;\n\n            case 15:\n              _context.t0 = _context.sent;\n\n            case 16:\n              imageLd = _context.t0;\n\n              if (imageLd && imageLd.value) {\n                image = imageLd.value;\n                hasImage = true;\n              } else {\n                hasImage = false;\n                image = defaultProfilePhoto;\n              }\n\n              userUrl = user.toString();\n              CUPurl = userUrl.substring(0, userUrl.length - 15) + \"/private/JohnDoe.rdf\"; //\"https://theletterj.solid.community/private/JohnDoe.rdf\";\n\n              qryStrQ = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/>  prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?o where {?s a cco:Person; cco:designated_by ?name . ?name a cco:GivenName . ?name cco:inheres_in ?ibe . ?ibe cco:has_text_value ?o .}\";\n              homeGeoQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?lat ?lon where {?person a cco:Person . ?person ro:agent_in ?reside . ?reside a cco:ActOfResiding . ?reside ro:has_participant ?part . ?part a cco:ResidentialFacility . ?part ro:located_in ?geoLoc . ?geoLoc a cco:GeospatialLocation . ?geoLoc cco:designated_by ?geoCode . ?geoCode cco:inheres_in ?codeId . ?codeId cco:has_latitude_value ?lat . ?codeId cco:has_longitude_value ?lon . }\";\n              workGeoQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?lat ?lon where {?person a cco:Person . ?person ro:agent_in ?employment . ?employment a cco:ActOfEmployment . ?employment cco:realizes ?role . ?role cco:has_organizational_context ?context . ?context a cco:Organization. ?context ro:agent_in ?act . ?act a cco:ActOfInhabitancy . ?act ro:has_participant ?facility . ?facility ro:located_in ?geoLoc . ?geoLoc a cco:GeospatialLocation . ?geoLoc cco:designated_by ?geoCode . ?geoCode cco:inheres_in ?codeId . ?codeId cco:has_latitude_value ?lat . ?codeId cco:has_longitude_value ?lon . }\";\n              loadFromUrl(CUPurl, store).then(function () {\n                return prepare(workGeoQS, store).then(function (qry) {\n                  return execute(qry, store).then(function (results) {\n                    console.debug(results);\n                    console.log(\"work geo\");\n\n                    _this.setState({\n                      workGeo: results\n                    });\n\n                    _this.state.workGeo.map(function (wG) {\n                      _this.setState({\n                        workWeatherAPI: \"https://api.weather.gov/points/\" + wG.lat.toString() + \",\" + wG.lon.toString() + \"/forecast\"\n                      });\n                    }); // alert(this.state.workWeatherAPI)\n\n\n                    fetch(_this.state.workWeatherAPI).then(function (response) {\n                      return response.json();\n                    }).then(function (weatherData) {\n                      if (weatherData['status'] !== 404) {\n                        _this.setState({\n                          workWeather: weatherData['properties']['periods']['0']['shortForecast']\n                        });\n\n                        console.log(_this.state.workWeather);\n\n                        if (_this.state.workWeather.includes('Rain') || _this.state.workWeather.includes('Snow')) {\n                          console.log('inclement weather');\n\n                          _this.setState({\n                            workWeatherPenalty: 15\n                          });\n                        } else {\n                          _this.setState({\n                            workWweatherPenalty: 0\n                          });\n\n                          console.log('No weather penalty');\n                        }\n                      } else {\n                        _this.setState({\n                          workWeather: 'No weather data found'\n                        });\n\n                        _this.setState({\n                          workWeatherPenalty: 0\n                        });\n                      }\n\n                      console.log(\"end weather fetch\");\n                    });\n                  });\n                });\n              });\n              loadFromUrl(CUPurl, store).then(function () {\n                return prepare(homeGeoQS, store).then(function (qry) {\n                  return execute(qry, store).then(function (results) {\n                    console.debug(results);\n                    console.log(\"home Geo\");\n\n                    _this.setState({\n                      homeGeo: results\n                    });\n\n                    _this.state.homeGeo.map(function (hG) {\n                      _this.setState({\n                        homeWeatherAPI: \"https://api.weather.gov/points/\" + hG.lat.toString() + \",\" + hG.lon.toString() + \"/forecast\"\n                      });\n                    }); // alert(this.state.workWeatherAPI)\n\n\n                    fetch(_this.state.homeWeatherAPI).then(function (response) {\n                      return response.json();\n                    }).then(function (weatherData) {\n                      if (weatherData['status'] !== 404) {\n                        _this.setState({\n                          homeWeather: weatherData['properties']['periods']['0']['shortForecast']\n                        });\n\n                        console.log(_this.state.homeWeather);\n\n                        if (_this.state.homeWeather.includes('Rain') || _this.state.homeWeather.includes('Snow')) {\n                          console.log('inclement weather');\n\n                          _this.setState({\n                            homeWeatherPenalty: 15\n                          });\n                        } else {\n                          _this.setState({\n                            homeWeatherPenalty: 0\n                          });\n\n                          console.log('No weather penalty');\n                        }\n                      } else {\n                        _this.setState({\n                          homeWeather: 'No weather data found'\n                        });\n\n                        _this.setState({\n                          homeWeatherPenalty: 0\n                        });\n                      }\n\n                      console.log(\"end weather fetch\");\n                    });\n                  });\n                });\n              });\n\n              _this.setState({\n                name: name,\n                image: image,\n                isLoading: false,\n                hasImage: hasImage\n              });\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.updatePhoto =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(uri, message) {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                user = data.user;\n\n                if (!_this.state.hasImage) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 5;\n                return user.image.set(uri);\n\n              case 5:\n                _context2.next = 9;\n                break;\n\n              case 7:\n                _context2.next = 9;\n                return user.image.add(uri);\n\n              case 9:\n                _this.props.toastManager.add(['', message], {\n                  appearance: 'success'\n                });\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this.props.toastManager.add(['Error', _context2.t0.message], {\n                  appearance: 'error'\n                });\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      name: '',\n      image: defaultProfilePhoto,\n      isLoading: false,\n      hasImage: false,\n      hits: []\n    };\n    return _this;\n  }\n\n  _createClass(SetupComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.webId) {\n        this.getProfileData();\n      }\n\n      var homeAddress = '732 cleaver farm road, middletown de';\n      var workAddress = '260 christiana rd, newcastle de'; //MAPQUEST API\n\n      var MAPQUEST_API = 'http://www.mapquestapi.com/directions/v2/route?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&from=';\n      var TO = '&to=';\n      fetch(MAPQUEST_API + homeAddress + TO + workAddress).then(function (response) {\n        return response.json();\n      }).then(function (resData) {\n        var time = resData.route[\"time\"] / 60;\n\n        _this2.setState({\n          driveTime: time\n        }); //this is an asynchronous function\n\n\n        console.log(\"fetch drivetime...\");\n        console.log({\n          driveTime: time\n        });\n        console.log('end drivetime');\n      }); //WEATHER API\n\n      var getLatLng = 'http://www.mapquestapi.com/geocoding/v1/address?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&location=260%20christiana%20rd%20newcastle%20de';\n      fetch(getLatLng).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        console.log('Get latLng for weather...');\n\n        _this2.setState({\n          weatherLat: responseData['results']['0']['locations']['0']['latLng']['lat']\n        });\n\n        _this2.setState({\n          weatherLng: responseData['results']['0']['locations']['0']['latLng']['lng']\n        });\n\n        console.log('latLng for weather:' + JSON.stringify(responseData['results']['0']['locations']['0']['latLng']));\n        console.log('End get latLng for weather');\n      }).then(function () {\n        fetch(WEATHER_API + _this2.state.weatherLat + ',' + _this2.state.weatherLng + FORECAST).then(function (response) {\n          return response.json();\n        }).then(function (weatherData) {\n          if (weatherData['status'] !== 404) {\n            _this2.setState({\n              weather: weatherData['properties']['periods']['0']['shortForecast']\n            });\n\n            console.log(\"weather fetch for \" + _this2.state.weatherLat.toString() + _this2.state.weatherLng.toString());\n            console.log(_this2.state.weather);\n\n            if (_this2.state.weather.includes('Rain') || _this2.state.weather.includes('Snow')) {\n              console.log('inclement weather');\n\n              _this2.setState({\n                weatherPenalty: 15\n              });\n            } else {\n              _this2.setState({\n                weatherPenalty: 0\n              });\n\n              console.log('No weather penalty');\n            }\n          } else {\n            _this2.setState({\n              weather: 'No weather data found'\n            });\n\n            _this2.setState({\n              weatherPenalty: 0\n            });\n          }\n\n          console.log(\"end weather fetch\");\n        });\n      });\n      var WEATHER_API = 'https://api.weather.gov/points/';\n      var FORECAST = '/forecast';\n    } //componentDidMount()\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.webId && this.props.webId !== prevProps.webId) {\n        this.getProfileData();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          image = _this$state.image,\n          isLoading = _this$state.isLoading,\n          results = _this$state.results,\n          driveTime = _this$state.driveTime,\n          homeWeather = _this$state.homeWeather,\n          homeWeatherPenalty = _this$state.homeWeatherPenalty,\n          workWeather = _this$state.workWeather,\n          workWeatherPenalty = _this$state.workWeatherPenalty,\n          workGeo = _this$state.workGeo,\n          homeGeo = _this$state.homeGeo;\n      return React.createElement(SetupPageContent, {\n        name: name,\n        image: image,\n        isLoading: isLoading,\n        webId: this.props.webId,\n        updatePhoto: this.updatePhoto,\n        driveTime: driveTime,\n        homeWeather: homeWeather,\n        homeWeatherPenalty: homeWeatherPenalty,\n        workWeather: workWeather,\n        workWeatherPenalty: workWeatherPenalty,\n        sliderVal: 0,\n        workGeo: workGeo,\n        homeGeo: homeGeo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SetupComponent;\n}(Component);\n\nexport default withWebId(withToastManager(SetupComponent));","map":{"version":3,"sources":["C:\\Users\\jason\\Documents\\APG\\Solid\\generatorTest\\solidwakeup\\wakeup-react\\src\\containers\\Setup\\setup.container.js"],"names":["React","Component","SetupPageContent","withWebId","data","withToastManager","$rdf","defaultProfilePhoto","store","graph","loadFromUrl","url","Promise","resolve","reject","fetcher","Fetcher","load","then","response","responseText","console","debug","err","prepare","qryStr","query","SPARQLToQuery","execute","qry","wanted","vars","resultAry","results","row","rowHandler","push","r","found","got","replace","length","w","label","value","SetupComponent","props","getProfileData","setState","isLoading","user","webId","name","nameLd","image","imageLd","vcard_hasPhoto","hasImage","userUrl","toString","CUPurl","substring","qryStrQ","homeGeoQS","workGeoQS","log","workGeo","state","map","wG","workWeatherAPI","lat","lon","fetch","json","weatherData","workWeather","includes","workWeatherPenalty","workWweatherPenalty","homeGeo","hG","homeWeatherAPI","homeWeather","homeWeatherPenalty","updatePhoto","uri","message","set","add","toastManager","appearance","hits","homeAddress","workAddress","MAPQUEST_API","TO","resData","time","route","driveTime","getLatLng","responseData","weatherLat","weatherLng","JSON","stringify","WEATHER_API","FORECAST","weather","weatherPenalty","prevProps","prevState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SetupPageContent from './setup.component';\r\nimport { withWebId } from '@inrupt/solid-react-components';\r\nimport data from '@solid/query-ldflex';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport $rdf from \"rdflib\";\r\n\r\nconst defaultProfilePhoto = '/img/icon/empty-profile.svg';\r\nconst store = $rdf.graph();\r\n\r\n\r\n// RG - 2019-02-28\r\n// Loads the data from a URL into the local store\r\nconst loadFromUrl = (url, store) => {\r\n    return new Promise((resolve, reject) => {\r\n      let fetcher = new $rdf.Fetcher(store);\r\n      try {\r\n        fetcher.load(url).then(response => {\r\n          resolve(response.responseText);\r\n          console.debug(response.responseText);\r\n          // $rdf.parse(response.responseText, store, $rdf.sym(url).uri,\"application/rdf\");\r\n        });\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n  \r\n  // RG - 2019-02-28\r\n  // Prepares a query by converting SPARQL into a Solid query\r\n  const prepare = (qryStr, store) => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let query = $rdf.SPARQLToQuery(qryStr, false, store);\r\n        resolve(query);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n  \r\n  // RG - 2019-02-28\r\n  // Executes a query on the local store\r\n  const execute = (qry, store) => {\r\n    return new Promise((resolve, reject) => {\r\n      console.debug(\"here\");\r\n      const wanted = qry.vars;\r\n      const resultAry = [];\r\n      store.query(\r\n        qry,\r\n        results => {\r\n          console.debug(\"here1\");\r\n          if (typeof results === \"undefined\") {\r\n            reject(\"No results.\");\r\n          } else {\r\n            let row = rowHandler(wanted, results);\r\n            console.debug(row);\r\n            if (row) resultAry.push(row);\r\n          }\r\n        },\r\n        {},\r\n        () => {\r\n          resolve(resultAry);\r\n        }\r\n      );\r\n    });\r\n  };\r\n  \r\n  // RG - 2019-02-28\r\n  // Puts query results into an array according to the projection\r\n  const rowHandler = (wanted, results) => {\r\n    const row = {};\r\n    for (var r in results) {\r\n      let found = false;\r\n      let got = r.replace(/^\\?/, \"\");\r\n      if (wanted.length) {\r\n        for (var w in wanted) {\r\n          if (got === wanted[w].label) {\r\n            found = true;\r\n            continue;\r\n          }\r\n        }\r\n        if (!found) continue;\r\n      }\r\n      row[got] = results[r].value;\r\n    }\r\n    return row;\r\n  };\r\n\r\nclass SetupComponent extends Component<Props> {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          name: '',\r\n          image: defaultProfilePhoto,\r\n          isLoading: false,\r\n          hasImage: false,\r\n          hits:[]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.webId) {\r\n          this.getProfileData();\r\n        }\r\n    \r\n        var homeAddress = '732 cleaver farm road, middletown de';\r\n        var workAddress = '260 christiana rd, newcastle de';\r\n    \r\n        //MAPQUEST API\r\n        const MAPQUEST_API = 'http://www.mapquestapi.com/directions/v2/route?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&from=';\r\n        const TO = '&to=';\r\n    \r\n        fetch(MAPQUEST_API + homeAddress + TO + workAddress)\r\n        .then(response =>  response.json())\r\n        .then(resData => {\r\n           \r\n           let time = resData.route[\"time\"]/60;\r\n           this.setState({ driveTime: time }); //this is an asynchronous function\r\n           console.log(\"fetch drivetime...\");\r\n           console.log({driveTime:time});\r\n           console.log('end drivetime');\r\n        })\r\n    \r\n        //WEATHER API\r\n        const getLatLng = 'http://www.mapquestapi.com/geocoding/v1/address?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&location=260%20christiana%20rd%20newcastle%20de';\r\n    \r\n        fetch(getLatLng).then(response => response.json()).then(responseData => {\r\n          console.log('Get latLng for weather...');\r\n          this.setState({weatherLat:responseData['results']['0']['locations']['0']['latLng']['lat']});\r\n          this.setState({weatherLng:responseData['results']['0']['locations']['0']['latLng']['lng']});\r\n          console.log('latLng for weather:' + JSON.stringify(responseData['results']['0']['locations']['0']['latLng']));\r\n          console.log('End get latLng for weather');\r\n        }).then(() => {\r\n          fetch(WEATHER_API+this.state.weatherLat+','+this.state.weatherLng+FORECAST).then(response =>  response.json()).then(weatherData => {\r\n            if (weatherData['status'] !== 404){\r\n              this.setState({weather:weatherData['properties']['periods']['0']['shortForecast']})\r\n              console.log(\"weather fetch for \" + this.state.weatherLat.toString() + this.state.weatherLng.toString());\r\n              console.log(this.state.weather);\r\n              if ( (this.state.weather.includes('Rain')) || (this.state.weather.includes('Snow'))  ){\r\n                console.log('inclement weather');\r\n                this.setState({weatherPenalty:15});\r\n              } \r\n              else{\r\n                this.setState({weatherPenalty:0});\r\n                console.log('No weather penalty');\r\n              }\r\n            }\r\n            else{\r\n              this.setState({weather:'No weather data found'})\r\n              this.setState({weatherPenalty:0})\r\n            }\r\n            console.log(\"end weather fetch\");\r\n          })});\r\n    \r\n    \r\n        const WEATHER_API = 'https://api.weather.gov/points/';\r\n        const FORECAST = '/forecast';\r\n            \r\n    }//componentDidMount()\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.webId && this.props.webId !== prevProps.webId) {\r\n          this.getProfileData();\r\n        }\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        this.setState({ isLoading: true });\r\n        let hasImage;\r\n    \r\n        /*\r\n         * This is an example of how to use LDFlex. Here, we're loading the webID link into a user variable. This user object\r\n         * will contain all of the data stored in the webID link, such as profile information. Then, we're grabbing the user.name property\r\n         * from the returned user object.\r\n         */\r\n        const user = data[this.props.webId];\r\n        const nameLd = await user.name;\r\n    \r\n        const name = nameLd ? nameLd.value : '';\r\n    \r\n        let imageLd = await user.image;\r\n        imageLd = imageLd ? imageLd : await user.vcard_hasPhoto;\r\n    \r\n        let image;\r\n        if (imageLd && imageLd.value) {\r\n          image = imageLd.value;\r\n          hasImage = true;\r\n        } else {\r\n          hasImage = false;\r\n          image = defaultProfilePhoto;\r\n        }\r\n    \r\n    const userUrl = user.toString();    \r\n    const CUPurl = userUrl.substring(0,userUrl.length-15)+\"/private/JohnDoe.rdf\"//\"https://theletterj.solid.community/private/JohnDoe.rdf\";\r\n\r\n    const qryStrQ = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/>  prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?o where {?s a cco:Person; cco:designated_by ?name . ?name a cco:GivenName . ?name cco:inheres_in ?ibe . ?ibe cco:has_text_value ?o .}\";\r\n    const homeGeoQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?lat ?lon where {?person a cco:Person . ?person ro:agent_in ?reside . ?reside a cco:ActOfResiding . ?reside ro:has_participant ?part . ?part a cco:ResidentialFacility . ?part ro:located_in ?geoLoc . ?geoLoc a cco:GeospatialLocation . ?geoLoc cco:designated_by ?geoCode . ?geoCode cco:inheres_in ?codeId . ?codeId cco:has_latitude_value ?lat . ?codeId cco:has_longitude_value ?lon . }\"\r\n    const workGeoQS = \"prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> prefix ro: <http://www.obofoundry.org/ro/ro.owl#> select distinct ?lat ?lon where {?person a cco:Person . ?person ro:agent_in ?employment . ?employment a cco:ActOfEmployment . ?employment cco:realizes ?role . ?role cco:has_organizational_context ?context . ?context a cco:Organization. ?context ro:agent_in ?act . ?act a cco:ActOfInhabitancy . ?act ro:has_participant ?facility . ?facility ro:located_in ?geoLoc . ?geoLoc a cco:GeospatialLocation . ?geoLoc cco:designated_by ?geoCode . ?geoCode cco:inheres_in ?codeId . ?codeId cco:has_latitude_value ?lat . ?codeId cco:has_longitude_value ?lon . }\";\r\n\r\n    loadFromUrl(CUPurl, store).then(() =>\r\n        prepare(workGeoQS, store).then(qry =>\r\n          execute(qry, store).then(results => {\r\n            console.debug(results);\r\n            console.log(\"work geo\")\r\n            this.setState({ workGeo: results });\r\n            this.state.workGeo.map(wG => {\r\n              this.setState({workWeatherAPI:\"https://api.weather.gov/points/\" + wG.lat.toString() + \",\" + wG.lon.toString() + \"/forecast\"})\r\n            })\r\n            // alert(this.state.workWeatherAPI)\r\n            fetch(this.state.workWeatherAPI).then(response => response.json()).then(weatherData => {\r\n              if(weatherData['status'] !== 404){\r\n                this.setState({workWeather:weatherData['properties']['periods']['0']['shortForecast']})\r\n                console.log(this.state.workWeather)\r\n              \r\n                if ( (this.state.workWeather.includes('Rain')) || (this.state.workWeather.includes('Snow'))  ){\r\n                  console.log('inclement weather');\r\n                  this.setState({workWeatherPenalty:15});\r\n                } \r\n                else{\r\n                  this.setState({workWweatherPenalty:0});\r\n                  console.log('No weather penalty');\r\n                }\r\n            }\r\n            else{\r\n              this.setState({workWeather:'No weather data found'})\r\n              this.setState({workWeatherPenalty:0})\r\n            }\r\n            console.log(\"end weather fetch\");\r\n          });\r\n        })  \r\n      )\r\n    );\r\n    \r\n    loadFromUrl(CUPurl, store).then(() =>\r\n      prepare(homeGeoQS, store).then(qry =>\r\n        execute(qry, store).then(results => {\r\n          console.debug(results);\r\n          console.log(\"home Geo\")\r\n          this.setState({ homeGeo: results });\r\n          this.state.homeGeo.map(hG => {\r\n            this.setState({homeWeatherAPI:\"https://api.weather.gov/points/\" + hG.lat.toString() + \",\" + hG.lon.toString() + \"/forecast\"})\r\n          })\r\n          // alert(this.state.workWeatherAPI)\r\n          fetch(this.state.homeWeatherAPI).then(response => response.json()).then(weatherData => {\r\n            if(weatherData['status'] !== 404){\r\n              this.setState({homeWeather:weatherData['properties']['periods']['0']['shortForecast']})\r\n              console.log(this.state.homeWeather)\r\n            \r\n              if ( (this.state.homeWeather.includes('Rain')) || (this.state.homeWeather.includes('Snow'))  ){\r\n                console.log('inclement weather');\r\n                this.setState({homeWeatherPenalty:15});\r\n              } \r\n              else{\r\n                this.setState({homeWeatherPenalty:0});\r\n                console.log('No weather penalty');\r\n              }\r\n          }\r\n          else{\r\n            this.setState({homeWeather:'No weather data found'})\r\n            this.setState({homeWeatherPenalty:0})\r\n          }\r\n          console.log(\"end weather fetch\");\r\n        });\r\n      })  \r\n    )\r\n  );\r\n\r\n\r\n        this.setState({ name, image, isLoading: false, hasImage });\r\n    };\r\n    \r\n\r\n    updatePhoto = async (uri: String, message) => {\r\n        try {\r\n          const { user } = data;\r\n          this.state.hasImage\r\n            ? await user.image.set(uri)\r\n            : await user.image.add(uri);\r\n    \r\n          this.props.toastManager.add(['', message], {\r\n            appearance: 'success'\r\n          });\r\n        } catch (error) {\r\n          this.props.toastManager.add(['Error', error.message], {\r\n            appearance: 'error'\r\n          });\r\n        }\r\n    };    \r\n\r\n    render() {\r\n        const { name, image, isLoading,results,driveTime,homeWeather,homeWeatherPenalty,workWeather,workWeatherPenalty,workGeo,homeGeo } = this.state;\r\n\r\n        return (\r\n        <SetupPageContent\r\n            name={name}\r\n            image={image}\r\n            isLoading={isLoading}\r\n            webId={this.props.webId}\r\n            updatePhoto={this.updatePhoto}\r\n            \r\n            driveTime={driveTime}\r\n            \r\n            homeWeather={homeWeather}\r\n            homeWeatherPenalty={homeWeatherPenalty}\r\n            \r\n            workWeather={workWeather}\r\n            workWeatherPenalty={workWeatherPenalty}\r\n            \r\n            sliderVal={0}\r\n            workGeo={workGeo}\r\n            homeGeo = {homeGeo}\r\n        />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withWebId(withToastManager(SetupComponent));\r\n"]},"metadata":{},"sourceType":"module"}