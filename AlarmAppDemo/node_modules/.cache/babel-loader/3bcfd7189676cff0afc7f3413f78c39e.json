{"ast":null,"code":"// **N3StreamWriter** serializes a triple stream into an N3 stream\nvar Transform = require('stream').Transform,\n    util = require('util'),\n    N3Writer = require('./N3Writer.js'); // ## Constructor\n\n\nfunction N3StreamWriter(options) {\n  if (!(this instanceof N3StreamWriter)) return new N3StreamWriter(options); // Initialize Transform base class\n\n  Transform.call(this, {\n    encoding: 'utf8'\n  });\n  this._writableState.objectMode = true; // Set up writer with a dummy stream object\n\n  var self = this;\n  var writer = new N3Writer({\n    write: function write(chunk, encoding, callback) {\n      self.push(chunk);\n      callback && callback();\n    },\n    end: function end(callback) {\n      self.push(null);\n      callback && callback();\n    }\n  }, options); // Implement Transform methods on top of writer\n\n  this._transform = function (triple, encoding, done) {\n    writer.addTriple(triple, done);\n  };\n\n  this._flush = function (done) {\n    writer.end(done);\n  };\n}\n\nutil.inherits(N3StreamWriter, Transform); // ## Exports\n// Export the `N3StreamWriter` class as a whole.\n\nmodule.exports = N3StreamWriter;","map":null,"metadata":{},"sourceType":"script"}