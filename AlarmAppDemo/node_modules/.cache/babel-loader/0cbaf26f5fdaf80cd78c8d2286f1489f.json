{"ast":null,"code":"// **N3StreamParser** parses an N3 stream into a triple stream\nvar Transform = require('stream').Transform,\n    util = require('util'),\n    N3Parser = require('./N3Parser.js'); // ## Constructor\n\n\nfunction N3StreamParser(options) {\n  if (!(this instanceof N3StreamParser)) return new N3StreamParser(options); // Initialize Transform base class\n\n  Transform.call(this, {\n    decodeStrings: true\n  });\n  this._readableState.objectMode = true; // Set up parser\n\n  var self = this,\n      parser = new N3Parser(options);\n  parser.parse( // Handle triples by pushing them down the pipeline\n  function (error, triple) {\n    triple && self.push(triple) || error && self.emit('error', error);\n  }, // Emit prefixes through the `prefix` event\n  this.emit.bind(this, 'prefix')); // Implement Transform methods on top of parser\n\n  this._transform = function (chunk, encoding, done) {\n    parser.addChunk(chunk);\n    done();\n  };\n\n  this._flush = function (done) {\n    parser.end();\n    done();\n  };\n}\n\nutil.inherits(N3StreamParser, Transform); // ## Exports\n// Export the `N3StreamParser` class as a whole.\n\nmodule.exports = N3StreamParser;","map":null,"metadata":{},"sourceType":"script"}