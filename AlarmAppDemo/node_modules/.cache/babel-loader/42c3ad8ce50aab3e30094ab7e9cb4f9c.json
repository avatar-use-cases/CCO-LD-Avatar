{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\src\\\\containers\\\\Setup\\\\setup.container.js\";\nimport React, { Component } from 'react';\nimport SetupPageContent from \"./setup.component\";\nimport { withWebId } from '@inrupt/solid-react-components';\nimport data from '@solid/query-ldflex';\nimport { withToastManager } from 'react-toast-notifications';\nvar defaultProfilePhoto = '/img/icon/empty-profile.svg';\n\nvar SetupComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SetupComponent, _Component);\n\n  function SetupComponent(props) {\n    var _this;\n\n    _classCallCheck(this, SetupComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SetupComponent).call(this, props));\n    _this.getProfileData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var hasImage, user, nameLd, name, imageLd, image;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                isLoading: true\n              });\n\n              /*\r\n               * This is an example of how to use LDFlex. Here, we're loading the webID link into a user variable. This user object\r\n               * will contain all of the data stored in the webID link, such as profile information. Then, we're grabbing the user.name property\r\n               * from the returned user object.\r\n               */\n              user = data[_this.props.webId];\n              _context.next = 4;\n              return user.name;\n\n            case 4:\n              nameLd = _context.sent;\n              name = nameLd ? nameLd.value : '';\n              _context.next = 8;\n              return user.image;\n\n            case 8:\n              imageLd = _context.sent;\n\n              if (!imageLd) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.t0 = imageLd;\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.next = 15;\n              return user.vcard_hasPhoto;\n\n            case 15:\n              _context.t0 = _context.sent;\n\n            case 16:\n              imageLd = _context.t0;\n\n              if (imageLd && imageLd.value) {\n                image = imageLd.value;\n                hasImage = true;\n              } else {\n                hasImage = false;\n                image = defaultProfilePhoto;\n              }\n\n              _this.setState({\n                name: name,\n                image: image,\n                isLoading: false,\n                hasImage: hasImage\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.updatePhoto =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(uri, message) {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                user = data.user;\n\n                if (!_this.state.hasImage) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 5;\n                return user.image.set(uri);\n\n              case 5:\n                _context2.next = 9;\n                break;\n\n              case 7:\n                _context2.next = 9;\n                return user.image.add(uri);\n\n              case 9:\n                _this.props.toastManager.add(['', message], {\n                  appearance: 'success'\n                });\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this.props.toastManager.add(['Error', _context2.t0.message], {\n                  appearance: 'error'\n                });\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      name: '',\n      image: defaultProfilePhoto,\n      isLoading: false,\n      hasImage: false,\n      hits: []\n    };\n    return _this;\n  }\n\n  _createClass(SetupComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.webId) {\n        this.getProfileData();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.webId && this.props.webId !== prevProps.webId) {\n        this.getProfileData();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          image = _this$state.image,\n          isLoading = _this$state.isLoading,\n          results = _this$state.results,\n          driveTime = _this$state.driveTime,\n          weather = _this$state.weather,\n          weatherPenalty = _this$state.weatherPenalty;\n      return React.createElement(SetupPageContent, {\n        name: name,\n        image: image,\n        isLoading: isLoading,\n        webId: this.props.webId,\n        updatePhoto: this.updatePhoto,\n        results: results,\n        driveTime: driveTime,\n        weather: weather,\n        weatherPenalty: weatherPenalty,\n        sliderVal: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SetupComponent;\n}(Component);\n\nexport default withWebId(withToastManager(SetupComponent));","map":{"version":3,"sources":["C:\\Users\\jason\\Documents\\APG\\Solid\\generatorTest\\solidwakeup\\wakeup-react\\src\\containers\\Setup\\setup.container.js"],"names":["React","Component","SetupPageContent","withWebId","data","withToastManager","defaultProfilePhoto","SetupComponent","props","getProfileData","setState","isLoading","user","webId","name","nameLd","value","image","imageLd","vcard_hasPhoto","hasImage","updatePhoto","uri","message","state","set","add","toastManager","appearance","hits","prevProps","prevState","results","driveTime","weather","weatherPenalty"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SetupPageContent from './setup.component';\r\nimport { withWebId } from '@inrupt/solid-react-components';\r\nimport data from '@solid/query-ldflex';\r\nimport { withToastManager } from 'react-toast-notifications';\r\n\r\nconst defaultProfilePhoto = '/img/icon/empty-profile.svg';\r\n\r\nclass SetupComponent extends Component<Props> {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          name: '',\r\n          image: defaultProfilePhoto,\r\n          isLoading: false,\r\n          hasImage: false,\r\n          hits:[]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.webId) {\r\n          this.getProfileData();\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.webId && this.props.webId !== prevProps.webId) {\r\n          this.getProfileData();\r\n        }\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        this.setState({ isLoading: true });\r\n        let hasImage;\r\n    \r\n        /*\r\n         * This is an example of how to use LDFlex. Here, we're loading the webID link into a user variable. This user object\r\n         * will contain all of the data stored in the webID link, such as profile information. Then, we're grabbing the user.name property\r\n         * from the returned user object.\r\n         */\r\n        const user = data[this.props.webId];\r\n        const nameLd = await user.name;\r\n    \r\n        const name = nameLd ? nameLd.value : '';\r\n    \r\n        let imageLd = await user.image;\r\n        imageLd = imageLd ? imageLd : await user.vcard_hasPhoto;\r\n    \r\n        let image;\r\n        if (imageLd && imageLd.value) {\r\n          image = imageLd.value;\r\n          hasImage = true;\r\n        } else {\r\n          hasImage = false;\r\n          image = defaultProfilePhoto;\r\n        }\r\n        this.setState({ name, image, isLoading: false, hasImage });\r\n    };\r\n\r\n    updatePhoto = async (uri: String, message) => {\r\n        try {\r\n          const { user } = data;\r\n          this.state.hasImage\r\n            ? await user.image.set(uri)\r\n            : await user.image.add(uri);\r\n    \r\n          this.props.toastManager.add(['', message], {\r\n            appearance: 'success'\r\n          });\r\n        } catch (error) {\r\n          this.props.toastManager.add(['Error', error.message], {\r\n            appearance: 'error'\r\n          });\r\n        }\r\n    };    \r\n\r\n    render() {\r\n        const { name, image, isLoading,results,driveTime,weather,weatherPenalty } = this.state;\r\n\r\n        return (\r\n        <SetupPageContent\r\n            name={name}\r\n            image={image}\r\n            isLoading={isLoading}\r\n            webId={this.props.webId}\r\n            updatePhoto={this.updatePhoto}\r\n            results={results}\r\n            driveTime={driveTime}\r\n            weather={weather}\r\n            weatherPenalty={weatherPenalty}\r\n            sliderVal={0}\r\n        />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withWebId(withToastManager(SetupComponent));\r\n"]},"metadata":{},"sourceType":"module"}