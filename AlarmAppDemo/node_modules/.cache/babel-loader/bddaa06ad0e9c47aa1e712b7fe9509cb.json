{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\APG\\\\Solid\\\\generatorTest\\\\solidwakeup\\\\wakeup-react\\\\src\\\\containers\\\\Setup\\\\setup.component.js\",\n    _this = this;\n\nimport React from 'react';\nimport isLoading from \"../../hocs/isLoading\";\nimport { withTranslation } from 'react-i18next';\nimport { SetupWrapper, SetupCard } from \"./setup.style\";\nimport { withToastManager } from 'react-toast-notifications';\nimport StepSlider from \"..\\\\..\\\\components\\\\Utils\\\\StepSlider\\\\StepSlider\";\n/**\r\n * Welcome Page UI component, containing the styled components for the Welcome Page\r\n * Image component will get theimage context and resolve the value to render.\r\n * @param props\r\n */\n\nvar getWorkGeo = function getWorkGeo(workGeo) {\n  if (workGeo) {\n    console.log(\"workGEO\");\n    console.log(workGeo);\n    return workGeo.map(function (wG) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Work Location: \", wG.lat, \", \", wG.lon);\n    });\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getHomeGeo = function getHomeGeo(homeGeo) {\n  if (homeGeo) {\n    console.log(\"homeGeo\");\n    console.log(homeGeo);\n    return homeGeo.map(function (hG) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Home Location: \", hG.lat, \", \", hG.lon);\n    });\n  } else {\n    return \"No results\";\n  }\n}; // const getDriveTime = driveTime => {\n//   if (driveTime) {\n//     // alert(driveTime);\n//     // console.log(driveTime);\n//     return (\n//       <p>\n//         {driveTime.toFixed(2)} minutes\n//       </p>\n//     );\n//   } else {\n//     return \"No results\";\n//   }\n// };\n\n\nvar getDriveTime = function getDriveTime(homeGeo, workGeo) {\n  var MAPQUEST_API = 'http://www.mapquestapi.com/directions/v2/route?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&from=';\n  var TO = '&to=';\n  homeGeo.map(function (hG) {\n    var HOMELOC = hG.lat + \",\" + hG.lon;\n  });\n  workGeo.map(function (wG) {\n    var WORKLOC = wG.lat + \",\" + wG.lon;\n  });\n  fetch(MAPQUEST_API + HOMELOC + TO + WORKLOC).then(function (response) {\n    return response.json();\n  }).then(function (resData) {\n    var time = resData.route[\"time\"] / 60;\n    console.log(\"fetch drivetime...\");\n    console.log(time);\n    console.log('end drivetime');\n    return time;\n  });\n}; // //MAPQUEST API\n// const MAPQUEST_API = 'http://www.mapquestapi.com/directions/v2/route?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&from=';\n// const TO = '&to=';\n// const HOMELOC = this.state.homeLat +\",\"+this.state.homeLon\n// const WORKLOC = this.state.worklat +\",\"+this.state.workLon\n// console.log(\"*********************************\")\n// console.log(HOMELOC + \" | \" + WORKLOC)\n// fetch(MAPQUEST_API + HOMELOC + TO + WORKLOC)\n// .then(response =>  response.json())\n// .then(resData => {\n//   let time = resData.route[\"time\"]/60;\n//   this.setState({ driveTime: time }); \n//   console.log(\"fetch drivetime...\");\n//   console.log({driveTime:time});\n//   console.log('end drivetime');\n// })\n\n\nvar logDriveTime = function logDriveTime(driveTime) {\n  if (driveTime) {\n    console.log(driveTime);\n  }\n};\n\nvar getWeather = function getWeather(homeWeather, workWeather) {\n  console.log(\"getWeather: \" + homeWeather + \" | \" + workWeather);\n\n  if (homeWeather || workWeather) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, workWeather, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), homeWeather);\n  } else {\n    return \"No results\";\n  }\n};\n\nvar getWeatherPenalty = function getWeatherPenalty(workWeatherPenalty, homeWeatherPenalty) {\n  if (homeWeatherPenalty || workWeatherPenalty) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, homeWeatherPenalty, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), workWeatherPenalty);\n  } else {\n    return 0;\n  }\n};\n\nvar SetupPageContent = function SetupPageContent(props) {\n  var name = props.name,\n      t = props.t;\n\n  function calcTime() {\n    var adjDriveTime = props.driveTime + props.weatherPenalty;\n\n    if (document.getElementById(\"prepTime\").value) {\n      adjDriveTime += parseInt(document.getElementById(\"prepTime\").value);\n    } // alert(adjDriveTime);\n\n\n    console.log(adjDriveTime);\n  }\n\n  return React.createElement(SetupWrapper, {\n    \"data-testid\": \"welcome-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(SetupCard, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, t('welcome.welcome'), \", \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, name)), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '80%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"How long do you need to get ready for work?\"), React.createElement(StepSlider, {\n    id: \"prepTime\",\n    onChange: function onChange(e, val) {\n      return _this.val = val;\n    },\n    onDragStop: function onDragStop(e) {\n      return _this.setState({\n        sliderVal: _this.val\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), props.sliderVal, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: calcTime,\n    styles: {\n      width: '100'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Show total time before work\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), \"Query Results:\", getWorkGeo(props.workGeo), getHomeGeo(props.homeGeo)), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '80%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), \"Travel Time:\", getDriveTime(props.driveTime), React.createElement(\"button\", {\n    onClick: logDriveTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Get Travel Time\")), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '80%',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), \"Weather info:\", getWeather(props.homeWeather, props.workWeather), getWeatherPenalty(props.homeWeatherPenalty, props.workWeatherPenalty), \" minutes\")));\n};\n\nexport { SetupPageContent };\nexport default withTranslation()(isLoading(withToastManager(SetupPageContent)));","map":{"version":3,"sources":["C:\\Users\\jason\\Documents\\APG\\Solid\\generatorTest\\solidwakeup\\wakeup-react\\src\\containers\\Setup\\setup.component.js"],"names":["React","isLoading","withTranslation","SetupWrapper","SetupCard","withToastManager","StepSlider","getWorkGeo","workGeo","console","log","map","wG","lat","lon","getHomeGeo","homeGeo","hG","getDriveTime","MAPQUEST_API","TO","HOMELOC","WORKLOC","fetch","then","response","json","resData","time","route","logDriveTime","driveTime","getWeather","homeWeather","workWeather","getWeatherPenalty","workWeatherPenalty","homeWeatherPenalty","SetupPageContent","props","name","t","calcTime","adjDriveTime","weatherPenalty","document","getElementById","value","parseInt","textAlign","width","marginLeft","marginRight","e","val","setState","sliderVal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport isLoading from '@hocs/isLoading';\r\nimport {withTranslation } from 'react-i18next';\r\nimport {\r\n  SetupWrapper,\r\n  SetupCard\r\n} from './setup.style';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport StepSlider from '..\\\\..\\\\components\\\\Utils\\\\StepSlider\\\\StepSlider';\r\n\r\n/**\r\n * Welcome Page UI component, containing the styled components for the Welcome Page\r\n * Image component will get theimage context and resolve the value to render.\r\n * @param props\r\n */\r\n\r\n  const getWorkGeo = workGeo => {\r\n    if (workGeo) {\r\n        console.log(\"workGEO\")\r\n        console.log(workGeo)\r\n      return workGeo.map(wG => (\r\n        <p>\r\n          Work Location: {wG.lat}, {wG.lon}\r\n        </p>\r\n      ));\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n\r\n  const getHomeGeo = homeGeo => {\r\n    if (homeGeo) {\r\n        console.log(\"homeGeo\")\r\n        console.log(homeGeo)\r\n      return homeGeo.map(hG => (\r\n        <p>\r\n          Home Location: {hG.lat}, {hG.lon}\r\n        </p>\r\n      ));\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n\r\n  // const getDriveTime = driveTime => {\r\n  //   if (driveTime) {\r\n  //     // alert(driveTime);\r\n  //     // console.log(driveTime);\r\n  //     return (\r\n  //       <p>\r\n  //         {driveTime.toFixed(2)} minutes\r\n  //       </p>\r\n  //     );\r\n  //   } else {\r\n  //     return \"No results\";\r\n  //   }\r\n  // };\r\n  \r\n  const getDriveTime = (homeGeo,workGeo) =>{\r\n    const MAPQUEST_API = 'http://www.mapquestapi.com/directions/v2/route?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&from=';\r\n    const TO = '&to=';\r\n    homeGeo.map(hG =>{\r\n      let HOMELOC = hG.lat + \",\" + hG.lon\r\n    })\r\n    workGeo.map(wG =>{\r\n      let WORKLOC = wG.lat + \",\" + wG.lon;\r\n    })\r\n\r\n    fetch(MAPQUEST_API + HOMELOC + TO + WORKLOC)\r\n      .then(response =>  response.json())\r\n      .then(resData => {\r\n        \r\n        let time = resData.route[\"time\"]/60;\r\n        console.log(\"fetch drivetime...\");\r\n        console.log(time);\r\n        console.log('end drivetime');\r\n        return time;\r\n      })\r\n\r\n  } \r\n  \r\n      // //MAPQUEST API\r\n      // const MAPQUEST_API = 'http://www.mapquestapi.com/directions/v2/route?key=DMw31TyjrjAee8VA1XAKnGGqw5sg7Nm3&from=';\r\n      // const TO = '&to=';\r\n      // const HOMELOC = this.state.homeLat +\",\"+this.state.homeLon\r\n      // const WORKLOC = this.state.worklat +\",\"+this.state.workLon\r\n      \r\n      // console.log(\"*********************************\")\r\n      // console.log(HOMELOC + \" | \" + WORKLOC)\r\n  \r\n  \r\n      // fetch(MAPQUEST_API + HOMELOC + TO + WORKLOC)\r\n      // .then(response =>  response.json())\r\n      // .then(resData => {\r\n        \r\n      //   let time = resData.route[\"time\"]/60;\r\n      //   this.setState({ driveTime: time }); \r\n      //   console.log(\"fetch drivetime...\");\r\n      //   console.log({driveTime:time});\r\n      //   console.log('end drivetime');\r\n      // })\r\n  \r\n\r\n\r\n\r\n  const logDriveTime = driveTime => {\r\n    if (driveTime) {\r\n      console.log(driveTime);\r\n    }\r\n  }\r\n  \r\n  const getWeather = (homeWeather,workWeather) => {\r\n    console.log(\"getWeather: \" + homeWeather + \" | \" + workWeather)\r\n    if ((homeWeather) || (workWeather)) {\r\n      return (\r\n        <p>\r\n          {workWeather}\r\n          <br/>\r\n          {homeWeather}\r\n        </p>\r\n  \r\n      );\r\n    } else {\r\n      return \"No results\";\r\n    }\r\n  };\r\n  \r\n  const getWeatherPenalty = (workWeatherPenalty,homeWeatherPenalty) => {\r\n    if ((homeWeatherPenalty) || (workWeatherPenalty)) {\r\n      return (\r\n        <p>\r\n          {homeWeatherPenalty}\r\n          <br/>\r\n          {workWeatherPenalty}\r\n        </p>\r\n  \r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n  \r\n  const SetupPageContent = props => {\r\n    const { name, t } = props;\r\n    \r\n  \r\n    function calcTime(){\r\n      var adjDriveTime = props.driveTime+props.weatherPenalty;\r\n      if (document.getElementById(\"prepTime\").value){\r\n        adjDriveTime += parseInt(document.getElementById(\"prepTime\").value);\r\n      }\r\n      // alert(adjDriveTime);\r\n      console.log(adjDriveTime);\r\n    }\r\n  \r\n    return (\r\n      <SetupWrapper data-testid=\"welcome-wrapper\">\r\n        <SetupCard className=\"card\">\r\n          <h3>\r\n            {t('welcome.welcome')}, <span>{name}</span>\r\n          </h3>\r\n          \r\n          <div style={{textAlign:'center',width:'80%',marginLeft:'auto',marginRight:'auto'}}>How long do you need to get ready for work?</div>\r\n        \r\n        <StepSlider id=\"prepTime\" onChange={ (e, val) => this.val = val } onDragStop={ (e) => this.setState({sliderVal:this.val})}/>\r\n        \r\n        {props.sliderVal}\r\n  \r\n        <div>\r\n          <br/>\r\n          <button onClick={calcTime} styles={{width:'100'}}>Show total time before work</button>\r\n        </div>\r\n          \r\n        <div>\r\n          <br/><br/>\r\n          Query Results:\r\n            {\r\n              getWorkGeo(props.workGeo)\r\n            }\r\n            {\r\n              getHomeGeo(props.homeGeo)\r\n            }\r\n        </div>\r\n  \r\n        <div style={{textAlign:'center',width:'80%',marginLeft:'auto',marginRight:'auto'}}>\r\n          <br/><br/>\r\n          Travel Time:\r\n          {getDriveTime(props.driveTime)}\r\n          <button onClick={logDriveTime}>Get Travel Time</button>        \r\n        </div>\r\n  \r\n        <div style={{textAlign:'center',width:'80%',marginLeft:'auto',marginRight:'auto'}}>\r\n          <br/><br/>\r\n          Weather info: \r\n          {getWeather(props.homeWeather,props.workWeather)}\r\n          {getWeatherPenalty(props.homeWeatherPenalty,props.workWeatherPenalty)} minutes\r\n        </div>\r\n  \r\n        </SetupCard>\r\n      </SetupWrapper>\r\n    );\r\n  };\r\n  \r\n  export { SetupPageContent };\r\n  export default withTranslation()(\r\n    isLoading(withToastManager(SetupPageContent))\r\n  );\r\n"]},"metadata":{},"sourceType":"module"}